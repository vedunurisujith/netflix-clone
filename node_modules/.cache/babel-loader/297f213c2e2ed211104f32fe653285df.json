{"ast":null,"code":"import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport React, { Children } from 'react';\nimport { Swipeable } from 'react-swipeable';\nimport cx from 'classnames';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport Only from 'react-only-when';\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nvar noop = function noop() {};\nvar numberToArray = function numberToArray(n) {\n  return _toConsumableArray(Array(n).keys());\n};\nvar cssPrefix = function cssPrefix() {\n  var prefix = \"rec\";\n  var space = \" \";\n  var result = \"\".concat(prefix); // initial it with global prefix;\n  // in case of an array we add the class prefix per item;\n\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  var chainedClasses = classNames.reduce(function (acc, current) {\n    if (current) {\n      acc += \"\".concat(space).concat(prefix, \"-\").concat(current); // we must keep spaces between class names\n    }\n    return acc;\n  }, \"\");\n  result += chainedClasses;\n  return result;\n};\nvar pipe = function pipe() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n  return function (x) {\n    return fns.reduce(function (v, f) {\n      return f(v);\n    }, x);\n  };\n};\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  box-sizing: border-box;\\n  transition: all 0.3s ease;\\n  font-size: 1.6em;\\n  background-color: rgba(103, 58, 183, 0.1);\\n  color: \", \";\\n  box-shadow: 0 0 2px 0px #333;\\n  border-radius: 50%;\\n  border: none;\\n  padding: 0;\\n  width: 50px;\\n  height: 50px;\\n  min-width: 50px;\\n  line-height: 50px;\\n  align-self: center;\\n  cursor: pointer;\\n  outline: none;\\n  &:hover:enabled,\\n  &:focus:enabled {\\n    color: #fff;\\n    background-color: rgba(103, 58, 183, 1);\\n    box-shadow: 0 0 2px 0 #333;\\n  }\\n  &:disabled {\\n    cursor: not-allowed;\\n  }\\n\"]);\n  _templateObject = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar Button = styled.button.attrs(function (_ref) {\n  var _ref$type = _ref.type,\n    type = _ref$type === void 0 ? \"button\" : _ref$type;\n  return {\n    type: type\n  };\n})(_templateObject(), function (props) {\n  return props.disabled ? \"#999\" : \"#333\";\n});\nvar consts = {\n  PREV: \"PREV\",\n  NEXT: \"NEXT\",\n  START: \"flex-start\",\n  CENTER: \"center\",\n  END: \"flex-end\"\n};\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteral([\"\\n  box-sizing: border-box;\\n  display: flex;\\n  overflow: hidden;\\n  user-select: none;\\n  justify-content: \", \";\\n\"]);\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar ItemWrapper = styled.div.attrs(function (_ref) {\n  var style = _ref.style;\n  return {\n    style: style,\n    className: cssPrefix(\"item-wrapper\")\n  };\n})(_templateObject$1(), function (_ref2) {\n  var itemPosition = _ref2.itemPosition;\n  return itemPosition;\n});\nItemWrapper.defaultProps = {\n  style: {},\n  itemPosition: consts.CENTER\n};\nItemWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object,\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END])\n};\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  margin: 0 10px;\\n\"]);\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar SliderContainer = styled.div(_templateObject$2());\nfunction _templateObject$3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  display: flex;\\n  flex-direction: \", \";\\n  \", \";\\n  \", \";\\n\"]);\n  _templateObject$3 = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar calcLeft = function calcLeft(_ref) {\n  var isRTL = _ref.isRTL,\n    verticalMode = _ref.verticalMode,\n    isSwiping = _ref.isSwiping,\n    swipedSliderPosition = _ref.swipedSliderPosition,\n    sliderPosition = _ref.sliderPosition;\n  if (verticalMode || isRTL) {\n    return \"auto\";\n  } else {\n    return \"\".concat(isSwiping ? swipedSliderPosition : sliderPosition, \"px\");\n  }\n};\nvar calcRight = function calcRight(_ref2) {\n  var isRTL = _ref2.isRTL,\n    verticalMode = _ref2.verticalMode,\n    isSwiping = _ref2.isSwiping,\n    swipedSliderPosition = _ref2.swipedSliderPosition,\n    sliderPosition = _ref2.sliderPosition;\n  if (!verticalMode && isRTL) {\n    return \"\".concat(isSwiping ? swipedSliderPosition : sliderPosition, \"px\");\n  } else {\n    return \"auto\";\n  }\n};\nvar calcTop = function calcTop(_ref3) {\n  var verticalMode = _ref3.verticalMode,\n    isSwiping = _ref3.isSwiping,\n    swipedSliderPosition = _ref3.swipedSliderPosition,\n    sliderPosition = _ref3.sliderPosition;\n  if (!verticalMode) {\n    return \"auto\";\n  } else {\n    return \"\".concat(isSwiping ? swipedSliderPosition : sliderPosition, \"px\");\n  }\n};\nvar calcTransition = function calcTransition(_ref4) {\n  var isSwiping = _ref4.isSwiping,\n    transitionMs = _ref4.transitionMs,\n    easing = _ref4.easing,\n    tiltEasing = _ref4.tiltEasing;\n  var duration = isSwiping ? 0 : transitionMs;\n  var effectiveEasing = isSwiping ? tiltEasing : easing;\n  return \"all \".concat(duration, \"ms \").concat(effectiveEasing);\n}; // We use attributes (style) to bypass multiple creation of classes (dynamic styling)\n\nvar Slider = styled.div.attrs(function (props) {\n  return {\n    style: {\n      transition: calcTransition(props),\n      left: calcLeft(props),\n      right: calcRight(props),\n      top: calcTop(props)\n    }\n  };\n})(_templateObject$3(), function (_ref5) {\n  var verticalMode = _ref5.verticalMode;\n  return verticalMode ? \"column\" : \"row\";\n}, function (_ref6) {\n  var verticalMode = _ref6.verticalMode;\n  return verticalMode ? \"min-height: 100%;\" : \"\";\n}, function (_ref7) {\n  var verticalMode = _ref7.verticalMode,\n    outerSpacing = _ref7.outerSpacing;\n  return verticalMode ? \"\" : \"margin: 0 \".concat(outerSpacing, \"px;\");\n});\nfunction _templateObject$4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  width: 100%;\\n\"]);\n  _templateObject$4 = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar StyledCarousel = styled.div.attrs(function (props) {\n  return {\n    style: {\n      height: props.size.height\n    }\n  };\n})(_templateObject$4());\nfunction _templateObject$5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n  direction: \", \";\\n\"]);\n  _templateObject$5 = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar CarouselWrapper = styled.div(_templateObject$5(), function (_ref) {\n  var isRTL = _ref.isRTL;\n  return isRTL ? \"rtl\" : \"ltr\";\n});\nvar ItemWrapperContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ItemWrapperContainer, _React$Component);\n  var _super = _createSuper(ItemWrapperContainer);\n  function ItemWrapperContainer() {\n    var _this;\n    _classCallCheck(this, ItemWrapperContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      var _this$props = _this.props,\n        onClick = _this$props.onClick,\n        id = _this$props.id;\n      onClick(id);\n    });\n    return _this;\n  }\n  _createClass(ItemWrapperContainer, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ItemWrapper, _extends({}, this.props, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n  return ItemWrapperContainer;\n}(React.Component);\nItemWrapperContainer.defaultProps = {\n  onClick: noop\n};\nItemWrapperContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func\n};\nvar Track = function Track(_ref) {\n  var children = _ref.children,\n    childWidth = _ref.childWidth,\n    autoTabIndexVisibleItems = _ref.autoTabIndexVisibleItems,\n    enableSwipe = _ref.enableSwipe,\n    enableMouseSwipe = _ref.enableMouseSwipe,\n    preventDefaultTouchmoveEvent = _ref.preventDefaultTouchmoveEvent,\n    itemsToShow = _ref.itemsToShow,\n    itemsToScroll = _ref.itemsToScroll,\n    currentItem = _ref.currentItem,\n    itemPosition = _ref.itemPosition,\n    itemPadding = _ref.itemPadding,\n    onSwiped = _ref.onSwiped,\n    onSwiping = _ref.onSwiping,\n    verticalMode = _ref.verticalMode,\n    onItemClick = _ref.onItemClick;\n  var width = \"\".concat(childWidth, \"px\");\n  var paddingStyle = \"\".concat(itemPadding.join(\"px \"), \"px\");\n  var minVisibleItem = currentItem;\n  var maxVisibleItem = currentItem + itemsToShow;\n  var prevItem = minVisibleItem - itemsToScroll;\n  var nextItem = maxVisibleItem + itemsToScroll;\n  var originalChildren = React.Children.map(children, function (child, idx) {\n    var isVisible = idx >= minVisibleItem && idx < maxVisibleItem;\n    var isPrevItem = !isVisible && idx >= prevItem && idx < currentItem;\n    var isNextItem = !isVisible && idx < nextItem && idx > currentItem;\n    var itemClass = \"carousel-item\";\n    var childToRender = autoTabIndexVisibleItems ? /*#__PURE__*/React.cloneElement(child, {\n      tabIndex: isVisible ? 0 : -1\n    }) : child;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cssPrefix(itemClass, \"\".concat(itemClass, \"-\").concat(idx), \"\".concat(itemClass, \"-\").concat(isVisible ? \"visible\" : \"hidden\"), isPrevItem && \"\".concat(itemClass, \"-prev\"), isNextItem && \"\".concat(itemClass, \"-next\"))\n    }, /*#__PURE__*/React.createElement(ItemWrapperContainer, {\n      id: idx,\n      itemPosition: itemPosition,\n      style: {\n        width: width,\n        padding: paddingStyle\n      },\n      key: idx,\n      onClick: onItemClick\n    }, childToRender));\n  });\n  var toRender = enableSwipe ? /*#__PURE__*/React.createElement(Swipeable, {\n    style: {\n      display: \"flex\",\n      flexDirection: verticalMode ? \"column\" : \"row\"\n    },\n    stopPropagation: true,\n    preventDefaultTouchmoveEvent: preventDefaultTouchmoveEvent,\n    trackMouse: enableMouseSwipe,\n    onSwiped: onSwiped,\n    onSwiping: onSwiping,\n    className: cssPrefix(\"swipable\")\n  }, originalChildren) : originalChildren;\n  return toRender;\n};\nTrack.propTypes = {\n  children: PropTypes.array.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  noAutoTabbedItems: PropTypes.bool,\n  currentItem: PropTypes.number.isRequired,\n  itemPosition: PropTypes.string,\n  itemPadding: PropTypes.array,\n  childWidth: PropTypes.number,\n  verticalMode: PropTypes.bool,\n  enableSwipe: PropTypes.bool,\n  enableMouseSwipe: PropTypes.bool,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onItemClick: PropTypes.func\n};\nvar directionIcons = {\n  left: \"❮\",\n  right: \"❯\",\n  up: \"❮\",\n  down: \"❯\"\n};\nvar arrowClassname = cssPrefix(\"arrow\");\nvar rotateStyle = function rotateStyle(direction) {\n  var rotate = {};\n  if (direction === Arrow.up || direction === Arrow.down) {\n    rotate.transform = \"rotate(90deg)\";\n  }\n  return rotate;\n};\nvar Arrow = function Arrow(_ref) {\n  var direction = _ref.direction,\n    onClick = _ref.onClick,\n    icons = _ref.icons,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, [\"direction\", \"onClick\", \"icons\", \"style\"]);\n  var arrows = _objectSpread2(_objectSpread2({}, directionIcons), icons);\n  var styleObj = _objectSpread2(_objectSpread2({}, rotateStyle(direction)), style);\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    tabIndex: 0,\n    onClick: onClick,\n    className: cx(arrowClassname, \"\".concat(arrowClassname, \"-\").concat(direction)),\n    style: styleObj\n  }, rest), arrows[direction]);\n};\nArrow.left = \"left\";\nArrow.right = \"right\";\nArrow.up = \"up\";\nArrow.down = \"down\";\nArrow.propTypes = {\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\n  icons: PropTypes.object,\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\nvar NEXT_ITEM = \"NEXT_ITEM\";\nvar PREV_ITEM = \"PREV_ITEM\";\nvar activeIndexReducer = function activeIndexReducer(state, action) {\n  var limit = action.limit,\n    itemsToScroll = action.itemsToScroll,\n    type = action.type;\n  switch (type) {\n    case NEXT_ITEM:\n      {\n        var optimisticNextItem = state + itemsToScroll;\n        var nextItem = limit >= optimisticNextItem ? optimisticNextItem : limit;\n        return nextItem;\n      }\n    case PREV_ITEM:\n      {\n        var optimisticPrevItem = state - itemsToScroll;\n        var prevItem = optimisticPrevItem >= limit ? optimisticPrevItem : limit;\n        return prevItem;\n      }\n    default:\n      return state;\n  }\n};\nvar nextItemAction = function nextItemAction(limit, itemsToScroll) {\n  return {\n    type: NEXT_ITEM,\n    limit: limit,\n    itemsToScroll: itemsToScroll\n  };\n};\nvar prevItemAction = function prevItemAction(limit, itemsToScroll) {\n  return {\n    type: PREV_ITEM,\n    limit: limit,\n    itemsToScroll: itemsToScroll\n  };\n};\nfunction _templateObject$6() {\n  var data = _taggedTemplateLiteral([\"\\n  box-sizing: border-box;\\n  padding: 0;\\n  transition: all 250ms ease;\\n  border: none;\\n  margin: 5px;\\n  background-color: \", \";\\n  font-size: 1.3em;\\n  content: \\\"\\\";\\n  height: 10px;\\n  width: 10px;\\n  box-shadow: \", \";\\n  border-radius: 50%;\\n  outline: none;\\n  &:hover,\\n  &:focus {\\n    cursor: pointer;\\n    box-shadow: \", \";\\n  }\\n\"]);\n  _templateObject$6 = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar boxShadow = \"0 0 1px 2px rgba(0, 0, 0, 0.5)\";\nvar activeBoxShadow = \"0 0 1px 3px rgba(103,58,183,1)\";\nvar hoveredBoxShadow = \"0 0 1px 3px rgba(103,58,183,.5)\";\nvar Dot = styled.button.attrs(function (_ref) {\n  var _ref$type = _ref.type,\n    type = _ref$type === void 0 ? \"button\" : _ref$type;\n  return {\n    type: type\n  };\n})(_templateObject$6(), function (_ref2) {\n  var active = _ref2.active;\n  return active ? \"rgba(103,58,183,.5)\" : \"transparent\";\n}, function (_ref3) {\n  var active = _ref3.active;\n  return active ? activeBoxShadow : boxShadow;\n}, function (_ref4) {\n  var active = _ref4.active;\n  return active ? activeBoxShadow : hoveredBoxShadow;\n});\nvar DotContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(DotContainer, _React$Component);\n  var _super = _createSuper(DotContainer);\n  function DotContainer() {\n    var _this;\n    _classCallCheck(this, DotContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      var _this$props = _this.props,\n        onClick = _this$props.onClick,\n        id = _this$props.id;\n      onClick(id);\n    });\n    return _this;\n  }\n  _createClass(DotContainer, [{\n    key: \"render\",\n    value: function render() {\n      var active = this.props.active;\n      return /*#__PURE__*/React.createElement(Dot, {\n        tabIndex: active ? -1 : 0,\n        onClick: this.onClick,\n        active: active,\n        className: \"\".concat(cssPrefix(\"dot\"), \" \").concat(active ? cssPrefix(\"dot_active\") : \"\")\n      });\n    }\n  }]);\n  return DotContainer;\n}(React.Component);\nDotContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};\nfunction _templateObject$7() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 15px;\\n\"]);\n  _templateObject$7 = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar Indicators = styled.div(_templateObject$7());\nvar Pagination = /*#__PURE__*/function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n  var _super = _createSuper(Pagination);\n  function Pagination() {\n    _classCallCheck(this, Pagination);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Pagination, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        numOfPages = _this$props.numOfPages,\n        activePage = _this$props.activePage,\n        onClick = _this$props.onClick;\n      var pages = numberToArray(numOfPages);\n      return /*#__PURE__*/React.createElement(Indicators, {\n        className: cssPrefix(\"pagination\")\n      }, pages.map(function (item, i) {\n        return /*#__PURE__*/React.createElement(DotContainer, {\n          key: i,\n          id: i,\n          active: i === activePage,\n          onClick: onClick\n        });\n      }));\n    }\n  }]);\n  return Pagination;\n}(React.Component);\nPagination.defaultProps = {\n  onClick: noop\n};\nPagination.propTypes = {\n  numOfPages: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\nvar Carousel = /*#__PURE__*/function (_React$Component) {\n  _inherits(Carousel, _React$Component);\n  var _super = _createSuper(Carousel);\n  function Carousel() {\n    var _this;\n    _classCallCheck(this, Carousel);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"isComponentMounted\", false);\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rootHeight: 0,\n      childHeight: 0,\n      sliderPosition: 0,\n      swipedSliderPosition: 0,\n      isSwiping: false,\n      transitioning: false,\n      transitionMs: _this.props.transitionMs,\n      activeIndex: _this.props.initialActiveIndex || _this.props.initialFirstItem,\n      // support deprecated  initialFirstItem\n      pages: [],\n      activePage: 0,\n      sliderContainerWidth: 0\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setRef\", function (name) {\n      return function (ref) {\n        return _this[name] = ref;\n      };\n    });\n    _defineProperty(_assertThisInitialized(_this), \"initResizeObserver\", function () {\n      _this.ro = new ResizeObserver(function (entries, observer) {\n        var _iterator = _createForOfIteratorHelper(entries),\n          _step;\n        try {\n          var _loop = function _loop() {\n            var entry = _step.value;\n            if (entry.target === _this.sliderContainer) {\n              // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n              // TBH, I'm not sure i fully understand why.\n              // see https://github.com/sag1v/react-elastic-carousel/issues/107\n              window.requestAnimationFrame(function () {\n                _this.onContainerResize(entry);\n              });\n            }\n            if (entry.target === _this.slider) {\n              // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n              // TBH, I'm not sure i fully understand why\n              // see https://github.com/sag1v/react-elastic-carousel/issues/107\n              window.requestAnimationFrame(function () {\n                _this.onSliderResize(entry);\n              });\n            }\n          };\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n      _this.ro.observe(_this.sliderContainer);\n      _this.ro.observe(_this.slider);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"unSubscribeObserver\", function () {\n      return _this.ro.disconnect();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setAutoPlay\", function () {\n      var _this$getDerivedProps = _this.getDerivedPropsFromBreakPoint(),\n        autoPlaySpeed = _this$getDerivedProps.autoPlaySpeed;\n      _this.autoPlayIntervalId = setInterval(function () {\n        if (_this.isComponentMounted) {\n          var transitioning = _this.state.transitioning;\n          if (!transitioning) {\n            _this.slideNext();\n          }\n        }\n      }, autoPlaySpeed);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"removeAutoPlay\", function () {\n      if (_this.autoPlayIntervalId) {\n        clearInterval(_this.autoPlayIntervalId);\n        _this.autoPlayIntervalId = null;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setPages\", function () {\n      var numOfPages = _this.getNumOfPages();\n      var pages = numberToArray(numOfPages);\n      _this.setState({\n        pages: pages\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onSliderTransitionEnd\", function (fn) {\n      _this.slider.addEventListener(\"transitionend\", fn);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"removeSliderTransitionHook\", function (fn) {\n      _this.slider.removeEventListener(\"transitionend\", fn);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getDerivedPropsFromBreakPoint\", function () {\n      var _this$props = _this.props,\n        breakPoints = _this$props.breakPoints,\n        restOfProps = _objectWithoutProperties(_this$props, [\"breakPoints\"]);\n      var sliderContainerWidth = _this.state.sliderContainerWidth; // default breakpoint from individual props\n\n      var currentBreakPoint; // if breakpoints were added as props override the individual props\n\n      if (breakPoints && breakPoints.length > 0) {\n        currentBreakPoint = breakPoints.slice() // no mutations\n        .reverse() // so we can find last match\n        .find(function (bp) {\n          return bp.width <= sliderContainerWidth;\n        });\n        if (!currentBreakPoint) {\n          /* in case we don't have a lower width than sliderContainerWidth\n           * this mostly happens in initilization when sliderContainerWidth is 0\n           */\n          currentBreakPoint = breakPoints[0];\n        }\n      } // merge direct props with current breakpoint Props\n\n      return _objectSpread2(_objectSpread2({}, restOfProps), currentBreakPoint);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateSliderPosition\", function () {\n      _this.setState(function (state) {\n        var _this$getDerivedProps2 = _this.getDerivedPropsFromBreakPoint(),\n          children = _this$getDerivedProps2.children,\n          verticalMode = _this$getDerivedProps2.verticalMode,\n          itemsToShow = _this$getDerivedProps2.itemsToShow,\n          transitionMs = _this$getDerivedProps2.transitionMs;\n        var childHeight = state.childHeight,\n          activeIndex = state.activeIndex;\n        var childWidth = _this.calculateChildWidth();\n        var totalItems = Children.toArray(children).length;\n        var hiddenSlots = totalItems - itemsToShow;\n        var moveBy = activeIndex * -1;\n        var emptySlots = itemsToShow - (totalItems - activeIndex);\n        if (emptySlots > 0 && hiddenSlots > 0) {\n          moveBy = emptySlots + activeIndex * -1;\n        }\n        var sliderPosition = (verticalMode ? childHeight : childWidth) * moveBy;\n        var newActiveIndex = emptySlots > 0 ? activeIndex - emptySlots : activeIndex; // go back from 0ms to whatever set by the user\n        // We were at 0ms because we wanted to disable animation on resize\n        // see https://github.com/sag1v/react-elastic-carousel/issues/94\n\n        window.requestAnimationFrame(function () {\n          if (_this.isComponentMounted) {\n            _this.setState({\n              transitionMs: transitionMs\n            });\n          }\n        });\n        return {\n          sliderPosition: sliderPosition,\n          activeIndex: newActiveIndex < 0 ? 0 : newActiveIndex\n        };\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onSliderResize\", function (sliderNode) {\n      if (!_this.isComponentMounted) {\n        return;\n      }\n      var _this$getDerivedProps3 = _this.getDerivedPropsFromBreakPoint(),\n        verticalMode = _this$getDerivedProps3.verticalMode,\n        children = _this$getDerivedProps3.children,\n        itemsToShow = _this$getDerivedProps3.itemsToShow;\n      var sliderHeight = sliderNode.contentRect.height;\n      var nextState = {};\n      var childrenLength = Children.toArray(children).length;\n      if (verticalMode) {\n        var childHeight = sliderHeight / childrenLength; // We use Math.min because we don't want to make the child smaller\n        // if the number of children is smaller than itemsToShow.\n        // (Because we do not want \"empty slots\")\n\n        nextState.rootHeight = childHeight * Math.min(childrenLength, itemsToShow);\n        nextState.childHeight = childHeight;\n      } else {\n        nextState.rootHeight = sliderHeight;\n      }\n      _this.setState(nextState);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"calculateChildWidth\", function () {\n      var sliderContainerWidth = _this.state.sliderContainerWidth;\n      var _this$getDerivedProps4 = _this.getDerivedPropsFromBreakPoint(),\n        verticalMode = _this$getDerivedProps4.verticalMode,\n        itemsToShow = _this$getDerivedProps4.itemsToShow,\n        showEmptySlots = _this$getDerivedProps4.showEmptySlots,\n        children = _this$getDerivedProps4.children;\n      /* based on slider container's width, get num of items to show\n          * and calculate child's width (and update it in state)\n          */\n\n      var childrenLength = Children.toArray(children).length || 1;\n      var childWidth = 0;\n      if (verticalMode) {\n        childWidth = sliderContainerWidth;\n      } else {\n        // When \"showEmptySlots\" is false\n        // We use Math.min because we don't want to make the child smaller\n        // if the number of children is smaller than itemsToShow.\n        // (Because we do not want \"empty slots\")\n        childWidth = sliderContainerWidth / (showEmptySlots ? itemsToShow : Math.min(childrenLength, itemsToShow));\n      }\n      return childWidth;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onContainerResize\", function (sliderContainerNode) {\n      var newSliderContainerWidth = sliderContainerNode.contentRect.width; // update slider container width\n      // disable animation on resize see https://github.com/sag1v/react-elastic-carousel/issues/94\n\n      var _this$getDerivedProps5 = _this.getDerivedPropsFromBreakPoint(),\n        outerSpacing = _this$getDerivedProps5.outerSpacing,\n        initialVerticalMode = _this$getDerivedProps5.verticalMode;\n      var containerWidth = newSliderContainerWidth - (initialVerticalMode ? 0 : outerSpacing * 2);\n      if (!_this.isComponentMounted || _this.state.sliderContainerWidth === newSliderContainerWidth) {\n        // prevent infinite loop\n        return;\n      }\n      _this.setState({\n        sliderContainerWidth: containerWidth,\n        transitionMs: 0\n      }, function () {\n        // we must get these props inside setState (get future props because its async)\n        var _this$getDerivedProps6 = _this.getDerivedPropsFromBreakPoint(),\n          onResize = _this$getDerivedProps6.onResize,\n          itemsToShow = _this$getDerivedProps6.itemsToShow,\n          children = _this$getDerivedProps6.children;\n        var childrenLength = Children.toArray(children).length || 1;\n        _this.setState(function (currentState) {\n          // We might need to change the selected index when the size of the container changes\n          // we are making sure the selected index is not out of boundaries and respecting itemsToShow\n          // This usually happens with breakpoints. see https://github.com/sag1v/react-elastic-carousel/issues/122\n          var activeIndex = currentState.activeIndex; // we take the lowest, in case itemsToShow is greater than childrenLength\n\n          var maxItemsToShow = Math.min(childrenLength, itemsToShow);\n          var endLimit = childrenLength - maxItemsToShow;\n          if (activeIndex > endLimit) {\n            activeIndex = endLimit;\n          }\n          return {\n            activeIndex: activeIndex\n          };\n        }, function () {\n          /* Based on all of the above new data:\n          * update slider position\n          * get the new current breakpoint\n          * pass the current breakpoint to the consumer's callback\n          */\n          _this.updateSliderPosition();\n          var currentBreakPoint = _this.getDerivedPropsFromBreakPoint();\n          onResize(currentBreakPoint);\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"tiltMovement\", function (position) {\n      var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n      var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 150;\n      _this.setState(function (state) {\n        return {\n          isSwiping: true,\n          swipedSliderPosition: position - distance\n        };\n      });\n      setTimeout(function () {\n        _this.setState({\n          isSwiping: false,\n          swipedSliderPosition: 0\n        });\n      }, duration);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"convertChildToCbObj\", function (index) {\n      var _this$getDerivedProps7 = _this.getDerivedPropsFromBreakPoint(),\n        children = _this$getDerivedProps7.children; // support decimal itemsToShow\n\n      var roundedIdx = Math.round(index);\n      var child = Children.toArray(children)[roundedIdx];\n      return {\n        item: child.props,\n        index: roundedIdx\n      };\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getNextItemIndex\", function (currentIndex, getPrev) {\n      var _this$getDerivedProps8 = _this.getDerivedPropsFromBreakPoint(),\n        children = _this$getDerivedProps8.children,\n        itemsToShow = _this$getDerivedProps8.itemsToShow,\n        itemsToScroll = _this$getDerivedProps8.itemsToScroll;\n      var childrenLength = Children.toArray(children).length || 1;\n      var notEnoughItemsToShow = itemsToShow > childrenLength;\n      var limit = getPrev ? 0 : childrenLength - itemsToShow;\n      if (notEnoughItemsToShow) {\n        limit = 0; // basically don't move\n      }\n      var nextAction = getPrev ? prevItemAction(0, itemsToScroll) : nextItemAction(limit, itemsToScroll);\n      var nextItem = activeIndexReducer(currentIndex, nextAction);\n      return nextItem;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getNextItemObj\", function (getPrev) {\n      var _this$getDerivedProps9 = _this.getDerivedPropsFromBreakPoint(),\n        children = _this$getDerivedProps9.children;\n      var activeIndex = _this.state.activeIndex;\n      var nextItemIndex = _this.getNextItemIndex(activeIndex, getPrev); // support decimal itemsToShow\n\n      var roundedIdx = Math.round(nextItemIndex);\n      var asElement = Children.toArray(children)[roundedIdx];\n      var asObj = {\n        item: asElement.props,\n        index: roundedIdx\n      };\n      return asObj;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"resetSwipe\", function () {\n      _this.setState({\n        swipedSliderPosition: 0,\n        transitioning: false,\n        isSwiping: false\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onSwiping\", function (data) {\n      var deltaX = data.deltaX,\n        absX = data.absX,\n        deltaY = data.deltaY,\n        absY = data.absY,\n        dir = data.dir;\n      _this.setState(function (state) {\n        var childHeight = state.childHeight,\n          activeIndex = state.activeIndex,\n          sliderPosition = state.sliderPosition;\n        var _this$getDerivedProps10 = _this.getDerivedPropsFromBreakPoint(),\n          itemsToShow = _this$getDerivedProps10.itemsToShow,\n          verticalMode = _this$getDerivedProps10.verticalMode,\n          children = _this$getDerivedProps10.children,\n          isRTL = _this$getDerivedProps10.isRTL;\n        var childWidth = _this.calculateChildWidth(); // determine how far can user swipe\n\n        var childrenLength = Children.toArray(children).length || 1;\n        var goingNext = !verticalMode && dir === \"Left\" && !isRTL || !verticalMode && dir === \"Right\" && isRTL || verticalMode && dir === \"Up\";\n        var goingBack = !verticalMode && dir === \"Right\" && !isRTL || !verticalMode && dir === \"Left\" && isRTL || verticalMode && dir === \"Down\";\n        var horizontalSwipe = dir === \"Left\" || dir === \"Right\";\n        var verticalSwipe = dir === \"Up\" || dir === \"Down\";\n        var horizontalMode = !verticalMode;\n        var distanceSwipe = 0;\n        var horizontalEdgeStoppage = childWidth / 2;\n        var verticalEdgeStoppage = childHeight / 2;\n        if (verticalMode) {\n          if (verticalSwipe) {\n            var trackSize = childrenLength * childHeight;\n            if (goingNext) {\n              distanceSwipe = trackSize - childHeight * activeIndex - itemsToShow * childHeight + verticalEdgeStoppage;\n            } else if (goingBack) {\n              distanceSwipe = childHeight * activeIndex + verticalEdgeStoppage;\n            }\n          }\n        } else {\n          if (horizontalSwipe) {\n            var _trackSize = childrenLength * childWidth;\n            if (goingNext) {\n              distanceSwipe = _trackSize - childWidth * activeIndex - itemsToShow * childWidth + horizontalEdgeStoppage;\n            } else if (goingBack) {\n              distanceSwipe = childWidth * activeIndex + horizontalEdgeStoppage;\n            }\n          }\n        }\n        var shouldHorizontalSkipUpdate = horizontalMode && verticalSwipe || horizontalMode && horizontalSwipe && absX > distanceSwipe;\n        var shouldVerticalSkipUpdate = verticalMode && horizontalSwipe || verticalMode && verticalSwipe && absY > distanceSwipe;\n        if (shouldHorizontalSkipUpdate || shouldVerticalSkipUpdate) {\n          // bail out of state update\n          return;\n        }\n        var swipedSliderPosition;\n        if (horizontalSwipe) {\n          if (isRTL) {\n            swipedSliderPosition = sliderPosition + deltaX;\n          } else {\n            swipedSliderPosition = sliderPosition - deltaX;\n          }\n        } else {\n          swipedSliderPosition = sliderPosition - deltaY;\n        }\n        return {\n          swipedSliderPosition: swipedSliderPosition,\n          isSwiping: true,\n          transitioning: true\n        };\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onSwiped\", function (data) {\n      // we need to handle all scenarios:\n      // 1. Horizontal mode - swipe left or right\n      // 2. Horizontal mode with RTL - swipe left or right\n      // 3. vertical mode - swipe up or down\n      var absX = data.absX,\n        absY = data.absY,\n        dir = data.dir;\n      var _this$state = _this.state,\n        childHeight = _this$state.childHeight,\n        activeIndex = _this$state.activeIndex;\n      var _this$getDerivedProps11 = _this.getDerivedPropsFromBreakPoint(),\n        verticalMode = _this$getDerivedProps11.verticalMode,\n        isRTL = _this$getDerivedProps11.isRTL,\n        itemsToScroll = _this$getDerivedProps11.itemsToScroll;\n      var childWidth = _this.calculateChildWidth();\n      var func = _this.resetSwipe;\n      var minSwipeDistanceHorizontal = childWidth / 5;\n      var minSwipeDistanceVertical = childHeight / 5;\n      var swipedLeft = dir === \"Left\";\n      var swipedRight = dir === \"Right\";\n      var swipedUp = dir === \"Up\";\n      var swipedDown = dir === \"Down\";\n      var verticalGoSwipe = verticalMode && (swipedUp || swipedDown) && absY > minSwipeDistanceVertical;\n      var horizontalGoSwipe = !verticalMode && (swipedRight || swipedLeft) && absX > minSwipeDistanceHorizontal;\n      var goodToGo = false;\n      if (verticalGoSwipe || horizontalGoSwipe) {\n        goodToGo = true;\n      }\n      if (goodToGo) {\n        // we should go to a different item\n        // determine what method we need to invoke\n        if (verticalMode) {\n          // get number of slides from user's swiping\n          var numberOfSlidesViaSwipe = Math.ceil((absY - minSwipeDistanceVertical) / childHeight); // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n\n          var numberOfSlidesTogo = Math.max(itemsToScroll, numberOfSlidesViaSwipe);\n          var backSlidesToGo = activeIndex - numberOfSlidesTogo;\n          var forwardSlideTtoGo = activeIndex + numberOfSlidesTogo; // up or down\n\n          if (swipedDown) {\n            // func = this.onPrevStart;\n            func = function func() {\n              return _this.goTo(backSlidesToGo);\n            };\n          }\n          if (swipedUp) {\n            // func = this.onNextStart;\n            func = function func() {\n              return _this.goTo(forwardSlideTtoGo);\n            };\n          }\n        } else {\n          // get number of slides from user's swiping\n          var _numberOfSlidesViaSwipe = Math.ceil((absX - minSwipeDistanceHorizontal) / childWidth); // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n\n          var _numberOfSlidesTogo = Math.max(itemsToScroll, _numberOfSlidesViaSwipe);\n          var _backSlidesToGo = activeIndex - _numberOfSlidesTogo;\n          var _forwardSlideTtoGo = activeIndex + _numberOfSlidesTogo; // horizontal mode\n\n          if (isRTL) {\n            // flip sides\n            if (swipedLeft) {\n              // func = this.onPrevStart;\n              func = function func() {\n                return _this.goTo(_backSlidesToGo);\n              };\n            }\n            if (swipedRight) {\n              // func = this.onNextStart;\n              func = function func() {\n                return _this.goTo(_forwardSlideTtoGo);\n              };\n            }\n          } else {\n            // normal behavior\n            if (swipedLeft) {\n              // func = this.onNextStart;\n              func = function func() {\n                return _this.goTo(_forwardSlideTtoGo);\n              };\n            }\n            if (swipedRight) {\n              // func = this.onPrevStart;\n              func = function func() {\n                return _this.goTo(_backSlidesToGo);\n              };\n            }\n          }\n        }\n      } // we are not \"tilting\" on edges, so we need to reset isSwiping and transitioning.\n      // otherwise we wont slide back to edge\n\n      _this.setState({\n        isSwiping: false,\n        transitioning: false\n      });\n      func({\n        skipTilt: true\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNextStart\", function (options) {\n      var _this$getDerivedProps12 = _this.getDerivedPropsFromBreakPoint(),\n        onNextStart = _this$getDerivedProps12.onNextStart;\n      var activeIndex = _this.state.activeIndex;\n      var nextItemObj = _this.getNextItemObj();\n      var prevItemObj = _this.convertChildToCbObj(activeIndex);\n      onNextStart(prevItemObj, nextItemObj);\n      _this.slideNext(options);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPrevStart\", function (options) {\n      var _this$getDerivedProps13 = _this.getDerivedPropsFromBreakPoint(),\n        onPrevStart = _this$getDerivedProps13.onPrevStart;\n      var activeIndex = _this.state.activeIndex;\n      var nextItemObj = _this.getNextItemObj(true);\n      var prevItemObj = _this.convertChildToCbObj(activeIndex);\n      onPrevStart(prevItemObj, nextItemObj);\n      _this.slidePrev(options);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"slideNext\", function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var skipTilt = options.skipTilt;\n      var _this$getDerivedProps14 = _this.getDerivedPropsFromBreakPoint(),\n        enableTilt = _this$getDerivedProps14.enableTilt;\n      var _this$state2 = _this.state,\n        activeIndex = _this$state2.activeIndex,\n        sliderPosition = _this$state2.sliderPosition;\n      var nextItem = _this.getNextItemIndex(activeIndex, false);\n      if (activeIndex !== nextItem) {\n        _this.goTo(nextItem);\n      } else if (enableTilt && !skipTilt) {\n        _this.tiltMovement(sliderPosition, 20, 150);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"slidePrev\", function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var skipTilt = options.skipTilt;\n      var activeIndex = _this.state.activeIndex;\n      var _this$getDerivedProps15 = _this.getDerivedPropsFromBreakPoint(),\n        enableTilt = _this$getDerivedProps15.enableTilt;\n      var prevItem = _this.getNextItemIndex(activeIndex, true);\n      if (activeIndex !== prevItem) {\n        _this.goTo(prevItem);\n      } else if (enableTilt && !skipTilt) {\n        _this.tiltMovement(0, -20, 150);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNextEnd\", function () {\n      var _this$getDerivedProps16 = _this.getDerivedPropsFromBreakPoint(),\n        onNextEnd = _this$getDerivedProps16.onNextEnd,\n        onChange = _this$getDerivedProps16.onChange;\n      var _this$state3 = _this.state,\n        activeIndex = _this$state3.activeIndex,\n        activePage = _this$state3.activePage;\n      var nextItemObj = _this.convertChildToCbObj(activeIndex);\n      _this.removeSliderTransitionHook(_this.onNextEnd);\n      _this.setState({\n        transitioning: false\n      });\n      onChange && onChange(nextItemObj, activePage);\n      onNextEnd(nextItemObj, activePage);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPrevEnd\", function () {\n      var _this$getDerivedProps17 = _this.getDerivedPropsFromBreakPoint(),\n        onPrevEnd = _this$getDerivedProps17.onPrevEnd,\n        onChange = _this$getDerivedProps17.onChange;\n      var _this$state4 = _this.state,\n        activeIndex = _this$state4.activeIndex,\n        activePage = _this$state4.activePage;\n      var nextItemObj = _this.convertChildToCbObj(activeIndex);\n      _this.removeSliderTransitionHook(_this.onPrevEnd);\n      _this.setState({\n        transitioning: false\n      });\n      onChange && onChange(nextItemObj, activePage);\n      onPrevEnd(nextItemObj, activePage);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"generatePositionUpdater\", function (direction, nextItemId, verticalMode, rest) {\n      return function (state) {\n        var sliderPosition = state.sliderPosition,\n          childHeight = state.childHeight,\n          activeIndex = state.activeIndex;\n        var childWidth = _this.calculateChildWidth();\n        var newSliderPosition = 0;\n        var childSize = verticalMode ? childHeight : childWidth;\n        if (direction === consts.NEXT) {\n          newSliderPosition = sliderPosition - childSize * (nextItemId - activeIndex);\n        } else {\n          newSliderPosition = sliderPosition + childSize * (activeIndex - nextItemId);\n        }\n        return _objectSpread2({\n          sliderPosition: newSliderPosition,\n          activeIndex: nextItemId,\n          swipedSliderPosition: 0,\n          isSwiping: false\n        }, rest);\n      };\n    });\n    _defineProperty(_assertThisInitialized(_this), \"goTo\", function (nextItemId) {\n      var _this$getDerivedProps18 = _this.getDerivedPropsFromBreakPoint(),\n        children = _this$getDerivedProps18.children,\n        verticalMode = _this$getDerivedProps18.verticalMode,\n        itemsToShow = _this$getDerivedProps18.itemsToShow;\n      var activeIndex = _this.state.activeIndex;\n      var childrenLength = Children.toArray(children).length;\n      var safeNextItemId = Math.max(0, nextItemId); // don't allow negative numbers\n\n      var isPrev = activeIndex > safeNextItemId;\n      var nextAvailableItem = _this.getNextItemIndex(activeIndex, isPrev);\n      var noChange = nextAvailableItem === activeIndex;\n      var outOfBoundary = safeNextItemId + itemsToShow >= childrenLength;\n      if (noChange) {\n        return;\n      }\n      if (outOfBoundary) {\n        // Either go to last index (respect itemsToShow) or 0 index if we can't fill the slider\n        safeNextItemId = Math.max(0, childrenLength - itemsToShow);\n      }\n      var direction = consts.NEXT;\n      var positionEndCb = _this.onNextEnd;\n      if (isPrev) {\n        direction = consts.PREV;\n        positionEndCb = _this.onPrevEnd;\n      }\n      var stateUpdater = _this.generatePositionUpdater(direction, safeNextItemId, verticalMode, {\n        transitioning: true\n      });\n      _this.setState(stateUpdater, function () {\n        // callback\n        pipe(_this.updateActivePage(), _this.onSliderTransitionEnd(positionEndCb));\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getNumOfPages\", function () {\n      var _this$getDerivedProps19 = _this.getDerivedPropsFromBreakPoint(),\n        children = _this$getDerivedProps19.children,\n        itemsToShow = _this$getDerivedProps19.itemsToShow;\n      var childrenLength = Children.toArray(children).length;\n      var safeItemsToShow = Math.max(itemsToShow, 1);\n      var numOfPages = Math.ceil(childrenLength / safeItemsToShow);\n      return numOfPages || 1;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateActivePage\", function () {\n      _this.setState(function (state) {\n        var _this$getDerivedProps20 = _this.getDerivedPropsFromBreakPoint(),\n          itemsToShow = _this$getDerivedProps20.itemsToShow,\n          children = _this$getDerivedProps20.children;\n        var activeIndex = state.activeIndex,\n          activePage = state.activePage;\n        var numOfPages = _this.getNumOfPages();\n        var childrenLength = Children.toArray(children).length;\n        var inRangeItemsToShow = Math.min(childrenLength, itemsToShow); // watch out from 0 (so we wont divide by zero)\n\n        var safeItemsToShow = Math.max(inRangeItemsToShow, 1);\n        var newActivePage = Math.ceil(activeIndex / safeItemsToShow);\n        var inRangeActivePageIndex = Math.min(numOfPages - 1, newActivePage);\n        if (activePage !== inRangeActivePageIndex) {\n          return {\n            activePage: inRangeActivePageIndex\n          };\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onIndicatorClick\", function (indicatorId) {\n      var _this$getDerivedProps21 = _this.getDerivedPropsFromBreakPoint(),\n        itemsToShow = _this$getDerivedProps21.itemsToShow;\n      var gotoIndex = indicatorId * itemsToShow;\n      _this.setState({\n        activePage: indicatorId\n      });\n      _this.goTo(gotoIndex);\n    });\n    return _this;\n  }\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.isComponentMounted = true;\n      this.initResizeObserver();\n      this.updateActivePage();\n      this.setPages();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props2 = this.props,\n        enableAutoPlay = _this$props2.enableAutoPlay,\n        children = _this$props2.children,\n        itemsToShow = _this$props2.itemsToShow,\n        itemsToScroll = _this$props2.itemsToScroll,\n        breakPoints = _this$props2.breakPoints;\n      var _this$state5 = this.state,\n        activeIndex = _this$state5.activeIndex,\n        sliderContainerWidth = _this$state5.sliderContainerWidth;\n      var nextItem = this.getNextItemIndex(activeIndex, false);\n      var currentChildrenLength = Children.toArray(children).length;\n      var prevChildrenLength = Children.toArray(prevProps.children).length; // update pages (for pagination)\n\n      if (prevChildrenLength !== currentChildrenLength || prevProps.itemsToShow !== itemsToShow || prevProps.itemsToScroll !== itemsToScroll || prevProps.breakPoints !== breakPoints || sliderContainerWidth !== prevState.sliderContainerWidth) {\n        // we mimic a container resize to recalculate item width when itemsToShow are updated\n        this.onContainerResize({\n          contentRect: {\n            width: sliderContainerWidth\n          }\n        });\n        this.setPages();\n        this.updateActivePage();\n      } // autoplay update\n\n      if (activeIndex === nextItem) {\n        this.removeAutoPlay();\n      } else if (enableAutoPlay && !this.autoPlayIntervalId) {\n        this.setAutoPlay();\n      } else if (!enableAutoPlay && this.autoPlayIntervalId) {\n        this.removeAutoPlay();\n      }\n      if (prevChildrenLength !== currentChildrenLength) {\n        var _this$getDerivedProps22 = this.getDerivedPropsFromBreakPoint(),\n          calculatedItemsToShow = _this$getDerivedProps22.itemsToShow; // number of items is reduced (we don't care if number of items is increased)\n        // we need to check if our current index is not out of boundaries\n        // we need to include itemsToShow so we can fill up the slots\n\n        var lastIndex = currentChildrenLength - 1;\n        var isOutOfRange = activeIndex + calculatedItemsToShow > lastIndex;\n        if (isOutOfRange) {\n          // we are out of boundaries, go \"back\" to last item of the list (respect itemsToShow)\n          this.goTo(Math.max(0, currentChildrenLength - calculatedItemsToShow));\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isComponentMounted = false;\n      this.removeAutoPlay();\n      this.unSubscribeObserver();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n        activePage = _this$state6.activePage,\n        isSwiping = _this$state6.isSwiping,\n        sliderPosition = _this$state6.sliderPosition,\n        swipedSliderPosition = _this$state6.swipedSliderPosition,\n        rootHeight = _this$state6.rootHeight,\n        pages = _this$state6.pages,\n        activeIndex = _this$state6.activeIndex,\n        transitionMs = _this$state6.transitionMs;\n      var _this$getDerivedProps23 = this.getDerivedPropsFromBreakPoint(),\n        className = _this$getDerivedProps23.className,\n        style = _this$getDerivedProps23.style,\n        itemsToShow = _this$getDerivedProps23.itemsToShow,\n        itemsToScroll = _this$getDerivedProps23.itemsToScroll,\n        verticalMode = _this$getDerivedProps23.verticalMode,\n        isRTL = _this$getDerivedProps23.isRTL,\n        easing = _this$getDerivedProps23.easing,\n        tiltEasing = _this$getDerivedProps23.tiltEasing,\n        children = _this$getDerivedProps23.children,\n        focusOnSelect = _this$getDerivedProps23.focusOnSelect,\n        autoTabIndexVisibleItems = _this$getDerivedProps23.autoTabIndexVisibleItems,\n        itemPosition = _this$getDerivedProps23.itemPosition,\n        itemPadding = _this$getDerivedProps23.itemPadding,\n        outerSpacing = _this$getDerivedProps23.outerSpacing,\n        enableSwipe = _this$getDerivedProps23.enableSwipe,\n        enableMouseSwipe = _this$getDerivedProps23.enableMouseSwipe,\n        pagination = _this$getDerivedProps23.pagination,\n        showArrows = _this$getDerivedProps23.showArrows,\n        disableArrowsOnEnd = _this$getDerivedProps23.disableArrowsOnEnd,\n        preventDefaultTouchmoveEvent = _this$getDerivedProps23.preventDefaultTouchmoveEvent,\n        renderArrow = _this$getDerivedProps23.renderArrow,\n        renderPagination = _this$getDerivedProps23.renderPagination;\n      var childWidth = this.calculateChildWidth();\n      var numOfPages = this.getNumOfPages();\n      /** Determine if arrows should be disabled */\n\n      var canSlidePrev = activeIndex !== this.getNextItemIndex(activeIndex, true);\n      var canSlideNext = activeIndex !== this.getNextItemIndex(activeIndex, false);\n      var disabledPrevArrow = !canSlidePrev && disableArrowsOnEnd;\n      var disabledNextArrow = !canSlideNext && disableArrowsOnEnd;\n      return /*#__PURE__*/React.createElement(CarouselWrapper, {\n        isRTL: isRTL,\n        className: \"\".concat(cssPrefix(\"carousel-wrapper\"), \" \").concat(className),\n        style: style\n      }, /*#__PURE__*/React.createElement(StyledCarousel, {\n        className: cssPrefix(\"carousel\"),\n        size: {\n          height: rootHeight\n        }\n      }, /*#__PURE__*/React.createElement(Only, {\n        when: showArrows\n      }, renderArrow ? renderArrow({\n        type: consts.PREV,\n        onClick: this.onPrevStart,\n        isEdge: !canSlidePrev\n      }) : /*#__PURE__*/React.createElement(Arrow, {\n        onClick: this.onPrevStart,\n        direction: verticalMode ? Arrow.up : Arrow.left,\n        disabled: disabledPrevArrow\n      })), /*#__PURE__*/React.createElement(SliderContainer, {\n        className: cssPrefix(\"slider-container\"),\n        ref: this.setRef(\"sliderContainer\")\n      }, /*#__PURE__*/React.createElement(Slider, {\n        verticalMode: verticalMode,\n        isRTL: isRTL,\n        easing: easing,\n        sliderPosition: sliderPosition,\n        swipedSliderPosition: swipedSliderPosition,\n        isSwiping: isSwiping,\n        transitionMs: transitionMs,\n        tiltEasing: tiltEasing,\n        className: cssPrefix(\"slider\"),\n        ref: this.setRef(\"slider\"),\n        outerSpacing: outerSpacing\n      }, /*#__PURE__*/React.createElement(Track, {\n        verticalMode: verticalMode,\n        children: Children.toArray(children),\n        childWidth: childWidth,\n        currentItem: activeIndex,\n        autoTabIndexVisibleItems: autoTabIndexVisibleItems,\n        itemsToShow: itemsToShow,\n        itemsToScroll: itemsToScroll,\n        itemPosition: itemPosition,\n        itemPadding: itemPadding,\n        enableSwipe: enableSwipe,\n        enableMouseSwipe: enableMouseSwipe,\n        preventDefaultTouchmoveEvent: preventDefaultTouchmoveEvent,\n        onSwiped: this.onSwiped,\n        onSwiping: this.onSwiping,\n        onItemClick: focusOnSelect ? this.goTo : undefined\n      }))), /*#__PURE__*/React.createElement(Only, {\n        when: showArrows\n      }, renderArrow ? renderArrow({\n        type: consts.NEXT,\n        onClick: this.onNextStart,\n        isEdge: !canSlideNext\n      }) : /*#__PURE__*/React.createElement(Arrow, {\n        onClick: this.onNextStart,\n        direction: verticalMode ? Arrow.down : Arrow.right,\n        disabled: disabledNextArrow\n      }))), /*#__PURE__*/React.createElement(Only, {\n        when: pagination\n      }, renderPagination ? renderPagination({\n        pages: pages,\n        activePage: activePage,\n        onClick: this.onIndicatorClick\n      }) : /*#__PURE__*/React.createElement(Pagination, {\n        numOfPages: numOfPages,\n        activePage: activePage,\n        onClick: this.onIndicatorClick\n      })));\n    }\n  }]);\n  return Carousel;\n}(React.Component);\nCarousel.defaultProps = {\n  className: \"\",\n  style: {},\n  verticalMode: false,\n  isRTL: false,\n  initialFirstItem: 0,\n  initialActiveIndex: 0,\n  showArrows: true,\n  showEmptySlots: false,\n  disableArrowsOnEnd: true,\n  pagination: true,\n  easing: \"ease\",\n  tiltEasing: \"ease\",\n  transitionMs: 500,\n  enableTilt: true,\n  enableSwipe: true,\n  enableMouseSwipe: true,\n  preventDefaultTouchmoveEvent: false,\n  focusOnSelect: false,\n  autoTabIndexVisibleItems: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  itemPosition: consts.CENTER,\n  itemPadding: [0, 0, 0, 0],\n  outerSpacing: 0,\n  enableAutoPlay: false,\n  autoPlaySpeed: 2000,\n  // callbacks\n  onChange: noop,\n  onNextEnd: noop,\n  onPrevEnd: noop,\n  onNextStart: noop,\n  onPrevStart: noop,\n  onResize: noop\n};\nCarousel.propTypes = {\n  /** Items to render */\n  children: PropTypes.node.isRequired,\n  /** The css class for the root element */\n  className: PropTypes.string,\n  /** The style object for the root element */\n  style: PropTypes.object,\n  /** Display the Carousel in a vertical layout */\n  verticalMode: PropTypes.bool,\n  /** Flip right to left */\n  isRTL: PropTypes.bool,\n  /** Show dots for paging */\n  pagination: PropTypes.bool,\n  /** Animation speed */\n  transitionMs: PropTypes.number,\n  /** transition easing pattern */\n  easing: PropTypes.string,\n  /** transition easing pattern for the tilt */\n  tiltEasing: PropTypes.string,\n  /** The \"bump\" animation when reaching the last item */\n  enableTilt: PropTypes.bool,\n  /** Number of visible items  */\n  itemsToShow: PropTypes.number,\n  /** Number of items to scroll */\n  itemsToScroll: PropTypes.number,\n  /** Collection of objects with a width, itemsToShow and itemsToScroll  */\n  breakPoints: PropTypes.arrayOf(PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    itemsToShow: PropTypes.number,\n    itemsToScroll: PropTypes.number\n  })),\n  /** The initial active index when the component mounts */\n  initialActiveIndex: PropTypes.number,\n  /** **DEPRECATED - use initialActiveIndex instead** The first items when the component mounts */\n  initialFirstItem: PropTypes.number,\n  /** Show the arrow buttons */\n  showArrows: PropTypes.bool,\n  /** Show empty slots when children.length < itemsToShow (not compatible with verticalMode yet !) */\n  showEmptySlots: PropTypes.bool,\n  /** Disables the arrow button when there are no more items */\n  disableArrowsOnEnd: PropTypes.bool,\n  /** Go to item on click */\n  focusOnSelect: PropTypes.bool,\n  /** Automatically inject `tabIndex:0` to visible items */\n  autoTabIndexVisibleItems: PropTypes.bool,\n  /** A render prop for the arrow component\n   * - ({type, onClick}) => <div onClick={onClick}>{type === 'prev' ? '<-' : '->'}</div>\n   */\n  renderArrow: PropTypes.func,\n  /** A render prop for the pagination component\n   * - ({ pages, activePage, onClick }) =>  <YourComponent/>\n   */\n  renderPagination: PropTypes.func,\n  /** Position the element relative to it's wrapper (use the consts object) - consts.START | consts.CENTER | consts.END */\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\n  /** A padding for each element  */\n  itemPadding: PropTypes.array,\n  /** A margin at the beginning and at the end of the carousel (not compatible with verticalMode yet !) */\n  outerSpacing: PropTypes.number,\n  // swipe\n\n  /** Enable or disable swipe */\n  enableSwipe: PropTypes.bool,\n  /** Enable or disable mouse swipe */\n  enableMouseSwipe: PropTypes.bool,\n  /** Prevent page scroll on touchmove.\n   * Use this to stop the browser from scrolling while a user swipes.\n   * More details: https://github.com/FormidableLabs/react-swipeable#preventdefaulttouchmoveevent-details\n   */\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  // auto play\n\n  /** Enable or disable auto play */\n  enableAutoPlay: PropTypes.bool,\n  /** Set auto play speed (ms) */\n  autoPlaySpeed: PropTypes.number,\n  // callbacks\n\n  /** A callback for the change of an item\n   * - onChange(currentItemObject, currentPageIndex) => {} */\n  onChange: PropTypes.func,\n  /** A callback for the beginning of the next transition\n   * - onNextStart(prevItemObject, nextItemObject) => {} */\n  onNextStart: PropTypes.func,\n  /** A callback for the beginning of the prev transition\n   * - onPrevStart(prevItemObject, nextItemObject) => {} */\n  onPrevStart: PropTypes.func,\n  /** A callback for the end of the next transition\n   * - onNextEnd(nextItemObject, currentPageIndex) => {} */\n  onNextEnd: PropTypes.func,\n  /** A callback for the end of the prev transition\n   * - onPrevEnd(nextItemObject, currentPageIndex) => {} */\n  onPrevEnd: PropTypes.func,\n  /** A callback for the \"slider-container\" resize\n   * - onResize(currentBreakPoint) => {} */\n  onResize: PropTypes.func\n};\nexport default Carousel;\nexport { consts };","map":{"version":3,"names":["noop","numberToArray","n","Array","keys","cssPrefix","prefix","space","result","concat","classNames","_len","_key","arguments","chainedClasses","reduce","acc","current","pipe","fns","_len2","_key2","x","v","f","Button","styled","button","attrs","_ref","type","_ref$type","_templateObject","props","disabled","consts","PREV","NEXT","START","CENTER","END","ItemWrapper","div","style","className","_templateObject$1","_ref2","itemPosition","defaultProps","propTypes","children","PropTypes","element","isRequired","object","oneOf","SliderContainer","_templateObject$2","calcLeft","isRTL","verticalMode","isSwiping","swipedSliderPosition","sliderPosition","calcRight","calcTop","_ref3","calcTransition","_ref4","transitionMs","easing","tiltEasing","duration","effectiveEasing","Slider","transition","left","right","top","_templateObject$3","_ref5","_ref6","_ref7","outerSpacing","StyledCarousel","height","size","_templateObject$4","CarouselWrapper","_templateObject$5","ItemWrapperContainer","_React$Component","_this","onClick","_this$props","id","React","createElement","_extends","Component","oneOfType","string","number","func","Track","childWidth","autoTabIndexVisibleItems","enableSwipe","enableMouseSwipe","preventDefaultTouchmoveEvent","itemsToShow","itemsToScroll","currentItem","itemPadding","onSwiped","onSwiping","onItemClick","width","paddingStyle","join","minVisibleItem","maxVisibleItem","prevItem","nextItem","originalChildren","Children","map","child","idx","isVisible","isPrevItem","isNextItem","itemClass","childToRender","cloneElement","tabIndex","padding","key","toRender","Swipeable","display","flexDirection","stopPropagation","trackMouse","array","noAutoTabbedItems","bool","directionIcons","up","down","arrowClassname","rotateStyle","direction","rotate","Arrow","transform","icons","rest","_objectWithoutProperties","arrows","_objectSpread2","styleObj","cx","NEXT_ITEM","PREV_ITEM","activeIndexReducer","state","action","limit","optimisticNextItem","optimisticPrevItem","nextItemAction","prevItemAction","boxShadow","activeBoxShadow","hoveredBoxShadow","Dot","_templateObject$6","active","DotContainer","Indicators","_templateObject$7","Pagination","numOfPages","activePage","pages","item","i","Carousel","rootHeight","childHeight","transitioning","activeIndex","initialActiveIndex","initialFirstItem","sliderContainerWidth","name","ref","ro","ResizeObserver","entries","observer","entry","_step","value","target","sliderContainer","window","requestAnimationFrame","onContainerResize","slider","onSliderResize","observe","disconnect","getDerivedPropsFromBreakPoint","autoPlaySpeed","_this$getDerivedProps","autoPlayIntervalId","setInterval","isComponentMounted","slideNext","clearInterval","getNumOfPages","setState","fn","addEventListener","removeEventListener","breakPoints","restOfProps","currentBreakPoint","length","slice","reverse","find","bp","_this$getDerivedProps2","calculateChildWidth","totalItems","toArray","hiddenSlots","moveBy","emptySlots","newActiveIndex","sliderNode","_this$getDerivedProps3","sliderHeight","contentRect","nextState","childrenLength","Math","min","_this$getDerivedProps4","showEmptySlots","sliderContainerNode","newSliderContainerWidth","_this$getDerivedProps5","initialVerticalMode","containerWidth","onResize","_this$getDerivedProps6","currentState","maxItemsToShow","endLimit","updateSliderPosition","position","distance","undefined","setTimeout","index","_this$getDerivedProps7","roundedIdx","round","currentIndex","getPrev","_this$getDerivedProps8","notEnoughItemsToShow","nextAction","_this$getDerivedProps9","nextItemIndex","getNextItemIndex","asElement","asObj","data","deltaX","absX","deltaY","absY","dir","_this$getDerivedProps10","goingNext","goingBack","horizontalSwipe","verticalSwipe","horizontalMode","distanceSwipe","horizontalEdgeStoppage","verticalEdgeStoppage","trackSize","_trackSize","shouldHorizontalSkipUpdate","shouldVerticalSkipUpdate","_this$state","_this$getDerivedProps11","resetSwipe","minSwipeDistanceHorizontal","minSwipeDistanceVertical","swipedLeft","swipedRight","swipedUp","swipedDown","verticalGoSwipe","horizontalGoSwipe","goodToGo","numberOfSlidesViaSwipe","ceil","numberOfSlidesTogo","max","backSlidesToGo","forwardSlideTtoGo","goTo","_numberOfSlidesViaSwipe","_numberOfSlidesTogo","_backSlidesToGo","_forwardSlideTtoGo","skipTilt","options","onNextStart","_this$getDerivedProps12","nextItemObj","getNextItemObj","prevItemObj","convertChildToCbObj","onPrevStart","_this$getDerivedProps13","slidePrev","enableTilt","_this$getDerivedProps14","_this$state2","tiltMovement","_this$getDerivedProps15","onNextEnd","_this$getDerivedProps16","onChange","_this$state3","removeSliderTransitionHook","onPrevEnd","_this$getDerivedProps17","_this$state4","nextItemId","newSliderPosition","childSize","_this$getDerivedProps18","safeNextItemId","isPrev","nextAvailableItem","noChange","outOfBoundary","positionEndCb","stateUpdater","generatePositionUpdater","updateActivePage","onSliderTransitionEnd","_this$getDerivedProps19","safeItemsToShow","_this$getDerivedProps20","inRangeItemsToShow","newActivePage","inRangeActivePageIndex","indicatorId","_this$getDerivedProps21","gotoIndex","initResizeObserver","setPages","prevProps","prevState","enableAutoPlay","_this$props2","_this$state5","currentChildrenLength","prevChildrenLength","removeAutoPlay","setAutoPlay","calculatedItemsToShow","_this$getDerivedProps22","lastIndex","isOutOfRange","unSubscribeObserver","_this$state6","_this$getDerivedProps23","focusOnSelect","pagination","showArrows","disableArrowsOnEnd","renderArrow","renderPagination","canSlidePrev","canSlideNext","disabledPrevArrow","disabledNextArrow","Only","when","isEdge","setRef","onIndicatorClick","node","arrayOf","shape"],"sources":["../src/react-elastic-carousel/utils/helpers.js","../src/react-elastic-carousel/components/styled/Button.js","../src/react-elastic-carousel/consts.js","../src/react-elastic-carousel/components/styled/ItemWrapper.js","../src/react-elastic-carousel/components/styled/SliderContainer.js","../src/react-elastic-carousel/components/styled/Slider.js","../src/react-elastic-carousel/components/styled/StyledCarousel.js","../src/react-elastic-carousel/components/styled/CarouselWrapper.js","../src/react-elastic-carousel/components/ItemWrapperContainer.js","../src/react-elastic-carousel/components/Track.js","../src/react-elastic-carousel/components/Arrow.js","../src/react-elastic-carousel/actions/consts.js","../src/react-elastic-carousel/reducers/items.js","../src/react-elastic-carousel/actions/itemsActions.js","../src/react-elastic-carousel/components/Pagination/Dot.js","../src/react-elastic-carousel/components/Pagination/Pagination.js","../src/react-elastic-carousel/components/Carousel.js"],"sourcesContent":["export const noop = () => {};\n\nexport const numberToArray = n => [...Array(n).keys()];\n\nexport const cssPrefix = (...classNames) => {\n  const prefix = \"rec\";\n  const space = \" \";\n  let result = `${prefix}`; // initial it with global prefix;\n\n  // in case of an array we add the class prefix per item;\n  const chainedClasses = classNames.reduce((acc, current) => {\n    if (current) {\n      acc += `${space}${prefix}-${current}`; // we must keep spaces between class names\n    }\n    return acc;\n  }, \"\");\n  result += chainedClasses;\n\n  return result;\n};\n\nexport const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);\n\nexport const throttle = (func, limit) => {\n  let lastFunc;\n  let lastRan;\n  return function() {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function() {\n        if (Date.now() - lastRan >= limit) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  };\n};\n","import styled from \"styled-components\";\n\nexport default styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  font-size: 1.6em;\n  background-color: rgba(103, 58, 183, 0.1);\n  color: ${props => (props.disabled ? \"#999\" : \"#333\")};\n  box-shadow: 0 0 2px 0px #333;\n  border-radius: 50%;\n  border: none;\n  padding: 0;\n  width: 50px;\n  height: 50px;\n  min-width: 50px;\n  line-height: 50px;\n  align-self: center;\n  cursor: pointer;\n  outline: none;\n  &:hover:enabled,\n  &:focus:enabled {\n    color: #fff;\n    background-color: rgba(103, 58, 183, 1);\n    box-shadow: 0 0 2px 0 #333;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n","export default {\n  PREV: \"PREV\",\n  NEXT: \"NEXT\",\n  START: \"flex-start\",\n  CENTER: \"center\",\n  END: \"flex-end\"\n};\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { cssPrefix } from \"../../utils/helpers\";\nimport consts from \"../../consts\";\n\nconst ItemWrapper = styled.div.attrs(({ style }) => ({\n  style,\n  className: cssPrefix(\"item-wrapper\")\n}))`\n  box-sizing: border-box;\n  display: flex;\n  overflow: hidden;\n  user-select: none;\n  justify-content: ${({ itemPosition }) => itemPosition};\n`;\n\nItemWrapper.defaultProps = {\n  style: {},\n  itemPosition: consts.CENTER\n};\n\nItemWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object,\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END])\n};\n\nexport default ItemWrapper;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin: 0 10px;\n`;\n","import styled from \"styled-components\";\n\nconst calcLeft = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (verticalMode || isRTL) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcRight = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode && isRTL) {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  } else {\n    return \"auto\";\n  }\n};\n\nconst calcTop = ({\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcTransition = ({ isSwiping, transitionMs, easing, tiltEasing }) => {\n  const duration = isSwiping ? 0 : transitionMs;\n  const effectiveEasing = isSwiping ? tiltEasing : easing;\n  return `all ${duration}ms ${effectiveEasing}`;\n};\n\n// We use attributes (style) to bypass multiple creation of classes (dynamic styling)\nexport default styled.div.attrs(props => ({\n  style: {\n    transition: calcTransition(props),\n    left: calcLeft(props),\n    right: calcRight(props),\n    top: calcTop(props)\n  }\n}))`\n  position: absolute;\n  display: flex;\n  flex-direction: ${({ verticalMode }) => (verticalMode ? \"column\" : \"row\")};\n  ${({ verticalMode }) => (verticalMode ? \"min-height: 100%;\" : \"\")};\n  ${({ verticalMode, outerSpacing }) =>\n    verticalMode ? \"\" : `margin: 0 ${outerSpacing}px;`};\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div.attrs(props => ({\n  style: {\n    height: props.size.height\n  }\n}))`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  direction: ${({ isRTL }) => (isRTL ? \"rtl\" : \"ltr\")};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ItemWrapper } from \"./styled\";\nimport { noop } from \"../utils/helpers\";\n\nclass ItemWrapperContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    return <ItemWrapper {...this.props} onClick={this.onClick} />;\n  }\n}\n\nItemWrapperContainer.defaultProps = {\n  onClick: noop\n};\n\nItemWrapperContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func\n};\n\nexport default ItemWrapperContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Swipeable } from \"react-swipeable\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport ItemWrapperContainer from \"./ItemWrapperContainer\";\n\nconst Track = ({\n  children,\n  childWidth,\n  autoTabIndexVisibleItems,\n  enableSwipe,\n  enableMouseSwipe,\n  preventDefaultTouchmoveEvent,\n  itemsToShow,\n  itemsToScroll,\n  currentItem,\n  itemPosition,\n  itemPadding,\n  onSwiped,\n  onSwiping,\n  verticalMode,\n  onItemClick\n}) => {\n  const width = `${childWidth}px`;\n  const paddingStyle = `${itemPadding.join(\"px \")}px`;\n  const minVisibleItem = currentItem;\n  const maxVisibleItem = currentItem + itemsToShow;\n  const prevItem = minVisibleItem - itemsToScroll;\n  const nextItem = maxVisibleItem + itemsToScroll;\n\n  const originalChildren = React.Children.map(children, (child, idx) => {\n    const isVisible = idx >= minVisibleItem && idx < maxVisibleItem;\n    const isPrevItem = !isVisible && idx >= prevItem && idx < currentItem;\n    const isNextItem = !isVisible && idx < nextItem && idx > currentItem;\n    const itemClass = \"carousel-item\";\n\n    const childToRender = autoTabIndexVisibleItems\n      ? React.cloneElement(child, {\n          tabIndex: isVisible ? 0 : -1\n        })\n      : child;\n    return (\n      <div\n        className={cssPrefix(\n          itemClass,\n          `${itemClass}-${idx}`,\n          `${itemClass}-${isVisible ? \"visible\" : \"hidden\"}`,\n          isPrevItem && `${itemClass}-prev`,\n          isNextItem && `${itemClass}-next`\n        )}\n      >\n        <ItemWrapperContainer\n          id={idx}\n          itemPosition={itemPosition}\n          style={{ width, padding: paddingStyle }}\n          key={idx}\n          onClick={onItemClick}\n        >\n          {childToRender}\n        </ItemWrapperContainer>\n      </div>\n    );\n  });\n  const toRender = enableSwipe ? (\n    <Swipeable\n      style={{\n        display: \"flex\",\n        flexDirection: verticalMode ? \"column\" : \"row\"\n      }}\n      stopPropagation\n      preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n      trackMouse={enableMouseSwipe}\n      onSwiped={onSwiped}\n      onSwiping={onSwiping}\n      className={cssPrefix(\"swipable\")}\n    >\n      {originalChildren}\n    </Swipeable>\n  ) : (\n    originalChildren\n  );\n  return toRender;\n};\n\nTrack.propTypes = {\n  children: PropTypes.array.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  noAutoTabbedItems: PropTypes.bool,\n  currentItem: PropTypes.number.isRequired,\n  itemPosition: PropTypes.string,\n  itemPadding: PropTypes.array,\n  childWidth: PropTypes.number,\n  verticalMode: PropTypes.bool,\n  enableSwipe: PropTypes.bool,\n  enableMouseSwipe: PropTypes.bool,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onItemClick: PropTypes.func\n};\n\nexport default Track;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport { Button } from \"./styled\";\n\nconst directionIcons = {\n  left: \"❮\",\n  right: \"❯\",\n  up: \"❮\",\n  down: \"❯\"\n};\n\nconst arrowClassname = cssPrefix(\"arrow\");\n\nconst rotateStyle = direction => {\n  let rotate = {};\n  if (direction === Arrow.up || direction === Arrow.down) {\n    rotate.transform = \"rotate(90deg)\";\n  }\n  return rotate;\n};\nconst Arrow = ({ direction, onClick, icons, style, ...rest }) => {\n  const arrows = { ...directionIcons, ...icons };\n  const styleObj = {\n    ...rotateStyle(direction),\n    ...style\n  };\n  return (\n    <Button\n      tabIndex={0}\n      onClick={onClick}\n      className={cx(arrowClassname, `${arrowClassname}-${direction}`)}\n      style={styleObj}\n      {...rest}\n    >\n      {arrows[direction]}\n    </Button>\n  );\n};\n\nArrow.left = \"left\";\nArrow.right = \"right\";\nArrow.up = \"up\";\nArrow.down = \"down\";\n\nArrow.propTypes = {\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\n  icons: PropTypes.object,\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\n\nexport default Arrow;\n","export const NEXT_ITEM = \"NEXT_ITEM\";\nexport const PREV_ITEM = \"PREV_ITEM\";\n","import { NEXT_ITEM, PREV_ITEM } from \"../actions/consts\";\n\nexport const activeIndexReducer = (state, action) => {\n  const { limit, itemsToScroll, type } = action;\n  switch (type) {\n    case NEXT_ITEM: {\n      let optimisticNextItem = state + itemsToScroll;\n      const nextItem = limit >= optimisticNextItem ? optimisticNextItem : limit;\n      return nextItem;\n    }\n\n    case PREV_ITEM: {\n      let optimisticPrevItem = state - itemsToScroll;\n      const prevItem = optimisticPrevItem >= limit ? optimisticPrevItem : limit;\n      return prevItem;\n    }\n\n    default:\n      return state;\n  }\n};\n","import { NEXT_ITEM, PREV_ITEM } from \"./consts\";\n\nexport const nextItemAction = (limit, itemsToScroll) => ({\n  type: NEXT_ITEM,\n  limit,\n  itemsToScroll\n});\n\nexport const prevItemAction = (limit, itemsToScroll) => ({\n  type: PREV_ITEM,\n  limit,\n  itemsToScroll\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { cssPrefix } from \"../../utils/helpers\";\n\nconst boxShadow = \"0 0 1px 2px rgba(0, 0, 0, 0.5)\";\nconst activeBoxShadow = \"0 0 1px 3px rgba(103,58,183,1)\";\nconst hoveredBoxShadow = \"0 0 1px 3px rgba(103,58,183,.5)\";\n\nconst Dot = styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  padding: 0;\n  transition: all 250ms ease;\n  border: none;\n  margin: 5px;\n  background-color: ${({ active }) =>\n    active ? \"rgba(103,58,183,.5)\" : \"transparent\"};\n  font-size: 1.3em;\n  content: \"\";\n  height: 10px;\n  width: 10px;\n  box-shadow: ${({ active }) => (active ? activeBoxShadow : boxShadow)};\n  border-radius: 50%;\n  outline: none;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: ${({ active }) =>\n      active ? activeBoxShadow : hoveredBoxShadow};\n  }\n`;\n\nclass DotContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    const { active } = this.props;\n    return (\n      <Dot\n        tabIndex={active ? -1 : 0}\n        onClick={this.onClick}\n        active={active}\n        className={`${cssPrefix(\"dot\")} ${\n          active ? cssPrefix(\"dot_active\") : \"\"\n        }`}\n      />\n    );\n  }\n}\n\nDotContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};\n\nexport default DotContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Dot from \"./Dot\";\nimport { numberToArray, cssPrefix, noop } from \"../../utils/helpers\";\n\nconst Indicators = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nclass Pagination extends React.Component {\n  render() {\n    const { numOfPages, activePage, onClick } = this.props;\n    const pages = numberToArray(numOfPages);\n    return (\n      <Indicators className={cssPrefix(\"pagination\")}>\n        {pages.map((item, i) => (\n          <Dot key={i} id={i} active={i === activePage} onClick={onClick} />\n        ))}\n      </Indicators>\n    );\n  }\n}\n\nPagination.defaultProps = {\n  onClick: noop\n};\n\nPagination.propTypes = {\n  numOfPages: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\n\nexport default Pagination;\n","import React, { Children } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport Only from \"react-only-when\";\nimport Track from \"./Track\";\nimport Arrow from \"./Arrow\";\nimport consts from \"../consts\";\nimport { activeIndexReducer } from \"../reducers/items\";\nimport { nextItemAction, prevItemAction } from \"../actions/itemsActions\";\nimport {\n  SliderContainer,\n  Slider,\n  StyledCarousel,\n  CarouselWrapper\n} from \"./styled\";\nimport { pipe, noop, cssPrefix, numberToArray } from \"../utils/helpers\";\nimport { Pagination } from \"./Pagination\";\n\nclass Carousel extends React.Component {\n  isComponentMounted = false;\n  state = {\n    rootHeight: 0,\n    childHeight: 0,\n    sliderPosition: 0,\n    swipedSliderPosition: 0,\n    isSwiping: false,\n    transitioning: false,\n    transitionMs: this.props.transitionMs,\n    activeIndex: this.props.initialActiveIndex || this.props.initialFirstItem, // support deprecated  initialFirstItem\n    pages: [],\n    activePage: 0,\n    sliderContainerWidth: 0\n  };\n\n  componentDidMount() {\n    this.isComponentMounted = true;\n    this.initResizeObserver();\n    this.updateActivePage();\n    this.setPages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      enableAutoPlay,\n      children,\n      itemsToShow,\n      itemsToScroll,\n      breakPoints\n    } = this.props;\n    const { activeIndex, sliderContainerWidth } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    const currentChildrenLength = Children.toArray(children).length;\n    const prevChildrenLength = Children.toArray(prevProps.children).length;\n    // update pages (for pagination)\n    if (\n      prevChildrenLength !== currentChildrenLength ||\n      prevProps.itemsToShow !== itemsToShow ||\n      prevProps.itemsToScroll !== itemsToScroll ||\n      prevProps.breakPoints !== breakPoints ||\n      sliderContainerWidth !== prevState.sliderContainerWidth\n    ) {\n      // we mimic a container resize to recalculate item width when itemsToShow are updated\n      this.onContainerResize({ contentRect: { width: sliderContainerWidth } });\n      this.setPages();\n      this.updateActivePage();\n    }\n\n    // autoplay update\n    if (activeIndex === nextItem) {\n      this.removeAutoPlay();\n    } else if (enableAutoPlay && !this.autoPlayIntervalId) {\n      this.setAutoPlay();\n    } else if (!enableAutoPlay && this.autoPlayIntervalId) {\n      this.removeAutoPlay();\n    }\n\n    if (prevChildrenLength !== currentChildrenLength) {\n      const {\n        itemsToShow: calculatedItemsToShow\n      } = this.getDerivedPropsFromBreakPoint();\n      // number of items is reduced (we don't care if number of items is increased)\n      // we need to check if our current index is not out of boundaries\n      // we need to include itemsToShow so we can fill up the slots\n      const lastIndex = currentChildrenLength - 1;\n      const isOutOfRange = activeIndex + calculatedItemsToShow > lastIndex;\n      if (isOutOfRange) {\n        // we are out of boundaries, go \"back\" to last item of the list (respect itemsToShow)\n        this.goTo(Math.max(0, currentChildrenLength - calculatedItemsToShow));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.removeAutoPlay();\n    this.unSubscribeObserver();\n  }\n\n  setRef = name => ref => (this[name] = ref);\n\n  initResizeObserver = () => {\n    this.ro = new ResizeObserver((entries, observer) => {\n      for (const entry of entries) {\n        if (entry.target === this.sliderContainer) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why.\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onContainerResize(entry);\n          });\n        }\n        if (entry.target === this.slider) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onSliderResize(entry);\n          });\n        }\n      }\n    });\n\n    this.ro.observe(this.sliderContainer);\n    this.ro.observe(this.slider);\n  };\n\n  unSubscribeObserver = () => this.ro.disconnect();\n\n  setAutoPlay = () => {\n    const { autoPlaySpeed } = this.getDerivedPropsFromBreakPoint();\n    this.autoPlayIntervalId = setInterval(() => {\n      if (this.isComponentMounted) {\n        const { transitioning } = this.state;\n        if (!transitioning) {\n          this.slideNext();\n        }\n      }\n    }, autoPlaySpeed);\n  };\n\n  removeAutoPlay = () => {\n    if (this.autoPlayIntervalId) {\n      clearInterval(this.autoPlayIntervalId);\n      this.autoPlayIntervalId = null;\n    }\n  };\n\n  setPages = () => {\n    const numOfPages = this.getNumOfPages();\n    const pages = numberToArray(numOfPages);\n    this.setState({ pages });\n  };\n\n  onSliderTransitionEnd = fn => {\n    this.slider.addEventListener(\"transitionend\", fn);\n  };\n\n  removeSliderTransitionHook = fn => {\n    this.slider.removeEventListener(\"transitionend\", fn);\n  };\n\n  getDerivedPropsFromBreakPoint = () => {\n    const { breakPoints, ...restOfProps } = this.props;\n    const { sliderContainerWidth } = this.state;\n\n    // default breakpoint from individual props\n    let currentBreakPoint;\n    // if breakpoints were added as props override the individual props\n    if (breakPoints && breakPoints.length > 0) {\n      currentBreakPoint = breakPoints\n        .slice() // no mutations\n        .reverse() // so we can find last match\n        .find(bp => bp.width <= sliderContainerWidth);\n      if (!currentBreakPoint) {\n        /* in case we don't have a lower width than sliderContainerWidth\n         * this mostly happens in initilization when sliderContainerWidth is 0\n         */\n        currentBreakPoint = breakPoints[0];\n      }\n    }\n    // merge direct props with current breakpoint Props\n    return { ...restOfProps, ...currentBreakPoint };\n  };\n\n  updateSliderPosition = () => {\n    this.setState(state => {\n      const {\n        children,\n        verticalMode,\n        itemsToShow,\n        transitionMs\n      } = this.getDerivedPropsFromBreakPoint();\n      const { childHeight, activeIndex } = state;\n\n      const childWidth = this.calculateChildWidth();\n      const totalItems = Children.toArray(children).length;\n      const hiddenSlots = totalItems - itemsToShow;\n      let moveBy = activeIndex * -1;\n      const emptySlots = itemsToShow - (totalItems - activeIndex);\n      if (emptySlots > 0 && hiddenSlots > 0) {\n        moveBy = emptySlots + activeIndex * -1;\n      }\n      let sliderPosition = (verticalMode ? childHeight : childWidth) * moveBy;\n      const newActiveIndex =\n        emptySlots > 0 ? activeIndex - emptySlots : activeIndex;\n      // go back from 0ms to whatever set by the user\n      // We were at 0ms because we wanted to disable animation on resize\n      // see https://github.com/sag1v/react-elastic-carousel/issues/94\n      window.requestAnimationFrame(() => {\n        if (this.isComponentMounted) {\n          this.setState({ transitionMs });\n        }\n      });\n      return {\n        sliderPosition,\n        activeIndex: newActiveIndex < 0 ? 0 : newActiveIndex\n      };\n    });\n  };\n\n  onSliderResize = sliderNode => {\n    if (!this.isComponentMounted) {\n      return;\n    }\n\n    const {\n      verticalMode,\n      children,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { height: sliderHeight } = sliderNode.contentRect;\n    const nextState = {};\n    const childrenLength = Children.toArray(children).length;\n    if (verticalMode) {\n      const childHeight = sliderHeight / childrenLength;\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      nextState.rootHeight =\n        childHeight * Math.min(childrenLength, itemsToShow);\n      nextState.childHeight = childHeight;\n    } else {\n      nextState.rootHeight = sliderHeight;\n    }\n    this.setState(nextState);\n  };\n\n  calculateChildWidth = () => {\n    const { sliderContainerWidth } = this.state;\n    const {\n      verticalMode,\n      itemsToShow,\n      showEmptySlots,\n      children\n    } = this.getDerivedPropsFromBreakPoint();\n\n    /* based on slider container's width, get num of items to show\n        * and calculate child's width (and update it in state)\n        */\n    const childrenLength = Children.toArray(children).length || 1;\n\n    let childWidth = 0;\n    if (verticalMode) {\n      childWidth = sliderContainerWidth;\n    } else {\n      // When \"showEmptySlots\" is false\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      childWidth =\n        sliderContainerWidth /\n        (showEmptySlots ? itemsToShow : Math.min(childrenLength, itemsToShow));\n    }\n    return childWidth;\n  };\n\n  onContainerResize = sliderContainerNode => {\n    const { width: newSliderContainerWidth } = sliderContainerNode.contentRect;\n    // update slider container width\n    // disable animation on resize see https://github.com/sag1v/react-elastic-carousel/issues/94\n    const {\n      outerSpacing,\n      verticalMode: initialVerticalMode\n    } = this.getDerivedPropsFromBreakPoint();\n    const containerWidth =\n      newSliderContainerWidth - (initialVerticalMode ? 0 : outerSpacing * 2);\n\n    if (\n      !this.isComponentMounted ||\n      this.state.sliderContainerWidth === newSliderContainerWidth\n    ) {\n      // prevent infinite loop\n      return;\n    }\n    this.setState(\n      { sliderContainerWidth: containerWidth, transitionMs: 0 },\n      () => {\n        // we must get these props inside setState (get future props because its async)\n        const {\n          onResize,\n          itemsToShow,\n          children\n        } = this.getDerivedPropsFromBreakPoint();\n\n        const childrenLength = Children.toArray(children).length || 1;\n\n        this.setState(\n          currentState => {\n            // We might need to change the selected index when the size of the container changes\n            // we are making sure the selected index is not out of boundaries and respecting itemsToShow\n            // This usually happens with breakpoints. see https://github.com/sag1v/react-elastic-carousel/issues/122\n            let activeIndex = currentState.activeIndex;\n            // we take the lowest, in case itemsToShow is greater than childrenLength\n            const maxItemsToShow = Math.min(childrenLength, itemsToShow);\n            const endLimit = childrenLength - maxItemsToShow;\n            if (activeIndex > endLimit) {\n              activeIndex = endLimit;\n            }\n\n            return { activeIndex };\n          },\n          () => {\n            /* Based on all of the above new data:\n            * update slider position\n            * get the new current breakpoint\n            * pass the current breakpoint to the consumer's callback\n            */\n            this.updateSliderPosition();\n            const currentBreakPoint = this.getDerivedPropsFromBreakPoint();\n            onResize(currentBreakPoint);\n          }\n        );\n      }\n    );\n  };\n\n  tiltMovement = (position, distance = 20, duration = 150) => {\n    this.setState(state => {\n      return {\n        isSwiping: true,\n        swipedSliderPosition: position - distance\n      };\n    });\n    setTimeout(() => {\n      this.setState({\n        isSwiping: false,\n        swipedSliderPosition: 0\n      });\n    }, duration);\n  };\n\n  convertChildToCbObj = index => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(index);\n    const child = Children.toArray(children)[roundedIdx];\n    return { item: child.props, index: roundedIdx };\n  };\n\n  getNextItemIndex = (currentIndex, getPrev) => {\n    const {\n      children,\n      itemsToShow,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length || 1;\n    const notEnoughItemsToShow = itemsToShow > childrenLength;\n    let limit = getPrev ? 0 : childrenLength - itemsToShow;\n\n    if (notEnoughItemsToShow) {\n      limit = 0; // basically don't move\n    }\n    const nextAction = getPrev\n      ? prevItemAction(0, itemsToScroll)\n      : nextItemAction(limit, itemsToScroll);\n    const nextItem = activeIndexReducer(currentIndex, nextAction);\n    return nextItem;\n  };\n\n  getNextItemObj = getPrev => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemIndex = this.getNextItemIndex(activeIndex, getPrev);\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(nextItemIndex);\n    const asElement = Children.toArray(children)[roundedIdx];\n    const asObj = { item: asElement.props, index: roundedIdx };\n    return asObj;\n  };\n\n  resetSwipe = () => {\n    this.setState({\n      swipedSliderPosition: 0,\n      transitioning: false,\n      isSwiping: false\n    });\n  };\n\n  onSwiping = data => {\n    const { deltaX, absX, deltaY, absY, dir } = data;\n\n    this.setState(state => {\n      const { childHeight, activeIndex, sliderPosition } = state;\n      const {\n        itemsToShow,\n        verticalMode,\n        children,\n        isRTL\n      } = this.getDerivedPropsFromBreakPoint();\n\n      const childWidth = this.calculateChildWidth();\n\n      // determine how far can user swipe\n      const childrenLength = Children.toArray(children).length || 1;\n      const goingNext =\n        (!verticalMode && dir === \"Left\" && !isRTL) ||\n        (!verticalMode && dir === \"Right\" && isRTL) ||\n        (verticalMode && dir === \"Up\");\n      const goingBack =\n        (!verticalMode && dir === \"Right\" && !isRTL) ||\n        (!verticalMode && dir === \"Left\" && isRTL) ||\n        (verticalMode && dir === \"Down\");\n\n      const horizontalSwipe = dir === \"Left\" || dir === \"Right\";\n      const verticalSwipe = dir === \"Up\" || dir === \"Down\";\n      const horizontalMode = !verticalMode;\n\n      let distanceSwipe = 0;\n      const horizontalEdgeStoppage = childWidth / 2;\n      const verticalEdgeStoppage = childHeight / 2;\n\n      if (verticalMode) {\n        if (verticalSwipe) {\n          const trackSize = childrenLength * childHeight;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childHeight * activeIndex -\n              itemsToShow * childHeight +\n              verticalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childHeight * activeIndex + verticalEdgeStoppage;\n          }\n        }\n      } else {\n        if (horizontalSwipe) {\n          const trackSize = childrenLength * childWidth;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childWidth * activeIndex -\n              itemsToShow * childWidth +\n              horizontalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childWidth * activeIndex + horizontalEdgeStoppage;\n          }\n        }\n      }\n\n      const shouldHorizontalSkipUpdate =\n        (horizontalMode && verticalSwipe) ||\n        (horizontalMode && horizontalSwipe && absX > distanceSwipe);\n\n      const shouldVerticalSkipUpdate =\n        (verticalMode && horizontalSwipe) ||\n        (verticalMode && verticalSwipe && absY > distanceSwipe);\n\n      if (shouldHorizontalSkipUpdate || shouldVerticalSkipUpdate) {\n        // bail out of state update\n        return;\n      }\n      let swipedSliderPosition;\n      if (horizontalSwipe) {\n        if (isRTL) {\n          swipedSliderPosition = sliderPosition + deltaX;\n        } else {\n          swipedSliderPosition = sliderPosition - deltaX;\n        }\n      } else {\n        swipedSliderPosition = sliderPosition - deltaY;\n      }\n      return {\n        swipedSliderPosition,\n        isSwiping: true,\n        transitioning: true\n      };\n    });\n  };\n\n  onSwiped = data => {\n    // we need to handle all scenarios:\n    // 1. Horizontal mode - swipe left or right\n    // 2. Horizontal mode with RTL - swipe left or right\n    // 3. vertical mode - swipe up or down\n\n    const { absX, absY, dir } = data;\n    const { childHeight, activeIndex } = this.state;\n    const {\n      verticalMode,\n      isRTL,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childWidth = this.calculateChildWidth();\n\n    let func = this.resetSwipe;\n    const minSwipeDistanceHorizontal = childWidth / 5;\n    const minSwipeDistanceVertical = childHeight / 5;\n    const swipedLeft = dir === \"Left\";\n    const swipedRight = dir === \"Right\";\n    const swipedUp = dir === \"Up\";\n    const swipedDown = dir === \"Down\";\n    const verticalGoSwipe =\n      verticalMode &&\n      (swipedUp || swipedDown) &&\n      absY > minSwipeDistanceVertical;\n\n    const horizontalGoSwipe =\n      !verticalMode &&\n      (swipedRight || swipedLeft) &&\n      absX > minSwipeDistanceHorizontal;\n\n    let goodToGo = false;\n    if (verticalGoSwipe || horizontalGoSwipe) {\n      goodToGo = true;\n    }\n\n    if (goodToGo) {\n      // we should go to a different item\n      // determine what method we need to invoke\n\n      if (verticalMode) {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absY - minSwipeDistanceVertical) / childHeight\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // up or down\n        if (swipedDown) {\n          // func = this.onPrevStart;\n          func = () => this.goTo(backSlidesToGo);\n        }\n        if (swipedUp) {\n          // func = this.onNextStart;\n          func = () => this.goTo(forwardSlideTtoGo);\n        }\n      } else {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absX - minSwipeDistanceHorizontal) / childWidth\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // horizontal mode\n        if (isRTL) {\n          // flip sides\n          if (swipedLeft) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n          if (swipedRight) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n        } else {\n          // normal behavior\n          if (swipedLeft) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n          if (swipedRight) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n        }\n      }\n    }\n    // we are not \"tilting\" on edges, so we need to reset isSwiping and transitioning.\n    // otherwise we wont slide back to edge\n    this.setState({ isSwiping: false, transitioning: false });\n    func({ skipTilt: true });\n  };\n\n  onNextStart = options => {\n    const { onNextStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj();\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onNextStart(prevItemObj, nextItemObj);\n    this.slideNext(options);\n  };\n\n  onPrevStart = options => {\n    const { onPrevStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj(true);\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onPrevStart(prevItemObj, nextItemObj);\n    this.slidePrev(options);\n  };\n\n  slideNext = (options = {}) => {\n    const { skipTilt } = options;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, sliderPosition } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    if (activeIndex !== nextItem) {\n      this.goTo(nextItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(sliderPosition, 20, 150);\n    }\n  };\n\n  slidePrev = (options = {}) => {\n    const { skipTilt } = options;\n    const { activeIndex } = this.state;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const prevItem = this.getNextItemIndex(activeIndex, true);\n    if (activeIndex !== prevItem) {\n      this.goTo(prevItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(0, -20, 150);\n    }\n  };\n\n  onNextEnd = () => {\n    const { onNextEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onNextEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onNextEnd(nextItemObj, activePage);\n  };\n\n  onPrevEnd = () => {\n    const { onPrevEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onPrevEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onPrevEnd(nextItemObj, activePage);\n  };\n\n  generatePositionUpdater = (\n    direction,\n    nextItemId,\n    verticalMode,\n    rest\n  ) => state => {\n    const { sliderPosition, childHeight, activeIndex } = state;\n    const childWidth = this.calculateChildWidth();\n\n    let newSliderPosition = 0;\n    const childSize = verticalMode ? childHeight : childWidth;\n    if (direction === consts.NEXT) {\n      newSliderPosition =\n        sliderPosition - childSize * (nextItemId - activeIndex);\n    } else {\n      newSliderPosition =\n        sliderPosition + childSize * (activeIndex - nextItemId);\n    }\n\n    return {\n      sliderPosition: newSliderPosition,\n      activeIndex: nextItemId,\n      swipedSliderPosition: 0,\n      isSwiping: false,\n      ...rest\n    };\n  };\n\n  goTo = nextItemId => {\n    const {\n      children,\n      verticalMode,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const childrenLength = Children.toArray(children).length;\n    let safeNextItemId = Math.max(0, nextItemId); // don't allow negative numbers\n    const isPrev = activeIndex > safeNextItemId;\n    const nextAvailableItem = this.getNextItemIndex(activeIndex, isPrev);\n    const noChange = nextAvailableItem === activeIndex;\n    const outOfBoundary = safeNextItemId + itemsToShow >= childrenLength;\n    if (noChange) {\n      return;\n    }\n    if (outOfBoundary) {\n      // Either go to last index (respect itemsToShow) or 0 index if we can't fill the slider\n      safeNextItemId = Math.max(0, childrenLength - itemsToShow);\n    }\n    let direction = consts.NEXT;\n    let positionEndCb = this.onNextEnd;\n    if (isPrev) {\n      direction = consts.PREV;\n      positionEndCb = this.onPrevEnd;\n    }\n    const stateUpdater = this.generatePositionUpdater(\n      direction,\n      safeNextItemId,\n      verticalMode,\n      {\n        transitioning: true\n      }\n    );\n    this.setState(stateUpdater, () => {\n      // callback\n      pipe(\n        this.updateActivePage(),\n        this.onSliderTransitionEnd(positionEndCb)\n      );\n    });\n  };\n\n  getNumOfPages = () => {\n    const { children, itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length;\n    const safeItemsToShow = Math.max(itemsToShow, 1);\n    const numOfPages = Math.ceil(childrenLength / safeItemsToShow);\n    return numOfPages || 1;\n  };\n\n  updateActivePage = () => {\n    this.setState(state => {\n      const { itemsToShow, children } = this.getDerivedPropsFromBreakPoint();\n      const { activeIndex, activePage } = state;\n      const numOfPages = this.getNumOfPages();\n      const childrenLength = Children.toArray(children).length;\n      const inRangeItemsToShow = Math.min(childrenLength, itemsToShow);\n      // watch out from 0 (so we wont divide by zero)\n      const safeItemsToShow = Math.max(inRangeItemsToShow, 1);\n      const newActivePage = Math.ceil(activeIndex / safeItemsToShow);\n      const inRangeActivePageIndex = Math.min(numOfPages - 1, newActivePage);\n      if (activePage !== inRangeActivePageIndex) {\n        return { activePage: inRangeActivePageIndex };\n      }\n    });\n  };\n\n  onIndicatorClick = indicatorId => {\n    const { itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const gotoIndex = indicatorId * itemsToShow;\n    this.setState({ activePage: indicatorId });\n    this.goTo(gotoIndex);\n  };\n\n  render() {\n    const {\n      activePage,\n      isSwiping,\n      sliderPosition,\n      swipedSliderPosition,\n      rootHeight,\n      pages,\n      activeIndex,\n      transitionMs\n    } = this.state;\n    const {\n      className,\n      style,\n      itemsToShow,\n      itemsToScroll,\n      verticalMode,\n      isRTL,\n      easing,\n      tiltEasing,\n      children,\n      focusOnSelect,\n      autoTabIndexVisibleItems,\n      itemPosition,\n      itemPadding,\n      outerSpacing,\n      enableSwipe,\n      enableMouseSwipe,\n      pagination,\n      showArrows,\n      disableArrowsOnEnd,\n      preventDefaultTouchmoveEvent,\n      renderArrow,\n      renderPagination\n    } = this.getDerivedPropsFromBreakPoint();\n\n    const childWidth = this.calculateChildWidth();\n\n    const numOfPages = this.getNumOfPages();\n\n    /** Determine if arrows should be disabled */\n    const canSlidePrev =\n      activeIndex !== this.getNextItemIndex(activeIndex, true);\n    const canSlideNext =\n      activeIndex !== this.getNextItemIndex(activeIndex, false);\n    const disabledPrevArrow = !canSlidePrev && disableArrowsOnEnd;\n    const disabledNextArrow = !canSlideNext && disableArrowsOnEnd;\n\n    return (\n      <CarouselWrapper\n        isRTL={isRTL}\n        className={`${cssPrefix(\"carousel-wrapper\")} ${className}`}\n        style={style}\n      >\n        <StyledCarousel\n          className={cssPrefix(\"carousel\")}\n          size={{ height: rootHeight }}\n        >\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.PREV,\n                onClick: this.onPrevStart,\n                isEdge: !canSlidePrev\n              })\n            ) : (\n              <Arrow\n                onClick={this.onPrevStart}\n                direction={verticalMode ? Arrow.up : Arrow.left}\n                disabled={disabledPrevArrow}\n              />\n            )}\n          </Only>\n          <SliderContainer\n            className={cssPrefix(\"slider-container\")}\n            ref={this.setRef(\"sliderContainer\")}\n          >\n            <Slider\n              verticalMode={verticalMode}\n              isRTL={isRTL}\n              easing={easing}\n              sliderPosition={sliderPosition}\n              swipedSliderPosition={swipedSliderPosition}\n              isSwiping={isSwiping}\n              transitionMs={transitionMs}\n              tiltEasing={tiltEasing}\n              className={cssPrefix(\"slider\")}\n              ref={this.setRef(\"slider\")}\n              outerSpacing={outerSpacing}\n            >\n              <Track\n                verticalMode={verticalMode}\n                children={Children.toArray(children)}\n                childWidth={childWidth}\n                currentItem={activeIndex}\n                autoTabIndexVisibleItems={autoTabIndexVisibleItems}\n                itemsToShow={itemsToShow}\n                itemsToScroll={itemsToScroll}\n                itemPosition={itemPosition}\n                itemPadding={itemPadding}\n                enableSwipe={enableSwipe}\n                enableMouseSwipe={enableMouseSwipe}\n                preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n                onSwiped={this.onSwiped}\n                onSwiping={this.onSwiping}\n                onItemClick={focusOnSelect ? this.goTo : undefined}\n              />\n            </Slider>\n          </SliderContainer>\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.NEXT,\n                onClick: this.onNextStart,\n                isEdge: !canSlideNext\n              })\n            ) : (\n              <Arrow\n                onClick={this.onNextStart}\n                direction={verticalMode ? Arrow.down : Arrow.right}\n                disabled={disabledNextArrow}\n              />\n            )}\n          </Only>\n        </StyledCarousel>\n        <Only when={pagination}>\n          {renderPagination ? (\n            renderPagination({\n              pages: pages,\n              activePage,\n              onClick: this.onIndicatorClick\n            })\n          ) : (\n            <Pagination\n              numOfPages={numOfPages}\n              activePage={activePage}\n              onClick={this.onIndicatorClick}\n            />\n          )}\n        </Only>\n      </CarouselWrapper>\n    );\n  }\n}\n\nCarousel.defaultProps = {\n  className: \"\",\n  style: {},\n  verticalMode: false,\n  isRTL: false,\n  initialFirstItem: 0,\n  initialActiveIndex: 0,\n  showArrows: true,\n  showEmptySlots: false,\n  disableArrowsOnEnd: true,\n  pagination: true,\n  easing: \"ease\",\n  tiltEasing: \"ease\",\n  transitionMs: 500,\n  enableTilt: true,\n  enableSwipe: true,\n  enableMouseSwipe: true,\n  preventDefaultTouchmoveEvent: false,\n  focusOnSelect: false,\n  autoTabIndexVisibleItems: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  itemPosition: consts.CENTER,\n  itemPadding: [0, 0, 0, 0],\n  outerSpacing: 0,\n  enableAutoPlay: false,\n  autoPlaySpeed: 2000,\n\n  // callbacks\n  onChange: noop,\n  onNextEnd: noop,\n  onPrevEnd: noop,\n  onNextStart: noop,\n  onPrevStart: noop,\n  onResize: noop\n};\n\nCarousel.propTypes = {\n  /** Items to render */\n  children: PropTypes.node.isRequired,\n\n  /** The css class for the root element */\n  className: PropTypes.string,\n\n  /** The style object for the root element */\n  style: PropTypes.object,\n\n  /** Display the Carousel in a vertical layout */\n  verticalMode: PropTypes.bool,\n\n  /** Flip right to left */\n  isRTL: PropTypes.bool,\n\n  /** Show dots for paging */\n  pagination: PropTypes.bool,\n\n  /** Animation speed */\n  transitionMs: PropTypes.number,\n\n  /** transition easing pattern */\n  easing: PropTypes.string,\n\n  /** transition easing pattern for the tilt */\n  tiltEasing: PropTypes.string,\n\n  /** The \"bump\" animation when reaching the last item */\n  enableTilt: PropTypes.bool,\n\n  /** Number of visible items  */\n  itemsToShow: PropTypes.number,\n\n  /** Number of items to scroll */\n  itemsToScroll: PropTypes.number,\n\n  /** Collection of objects with a width, itemsToShow and itemsToScroll  */\n  breakPoints: PropTypes.arrayOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      itemsToShow: PropTypes.number,\n      itemsToScroll: PropTypes.number\n    })\n  ),\n\n  /** The initial active index when the component mounts */\n  initialActiveIndex: PropTypes.number,\n\n  /** **DEPRECATED - use initialActiveIndex instead** The first items when the component mounts */\n  initialFirstItem: PropTypes.number,\n\n  /** Show the arrow buttons */\n  showArrows: PropTypes.bool,\n\n  /** Show empty slots when children.length < itemsToShow (not compatible with verticalMode yet !) */\n  showEmptySlots: PropTypes.bool,\n\n  /** Disables the arrow button when there are no more items */\n  disableArrowsOnEnd: PropTypes.bool,\n\n  /** Go to item on click */\n  focusOnSelect: PropTypes.bool,\n\n  /** Automatically inject `tabIndex:0` to visible items */\n  autoTabIndexVisibleItems: PropTypes.bool,\n\n  /** A render prop for the arrow component\n   * - ({type, onClick}) => <div onClick={onClick}>{type === 'prev' ? '<-' : '->'}</div>\n   */\n  renderArrow: PropTypes.func,\n\n  /** A render prop for the pagination component\n   * - ({ pages, activePage, onClick }) =>  <YourComponent/>\n   */\n  renderPagination: PropTypes.func,\n\n  /** Position the element relative to it's wrapper (use the consts object) - consts.START | consts.CENTER | consts.END */\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\n\n  /** A padding for each element  */\n  itemPadding: PropTypes.array,\n\n  /** A margin at the beginning and at the end of the carousel (not compatible with verticalMode yet !) */\n  outerSpacing: PropTypes.number,\n\n  // swipe\n  /** Enable or disable swipe */\n  enableSwipe: PropTypes.bool,\n\n  /** Enable or disable mouse swipe */\n  enableMouseSwipe: PropTypes.bool,\n\n  /** Prevent page scroll on touchmove.\n   * Use this to stop the browser from scrolling while a user swipes.\n   * More details: https://github.com/FormidableLabs/react-swipeable#preventdefaulttouchmoveevent-details\n   */\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n\n  // auto play\n  /** Enable or disable auto play */\n  enableAutoPlay: PropTypes.bool,\n\n  /** Set auto play speed (ms) */\n  autoPlaySpeed: PropTypes.number,\n\n  // callbacks\n  /** A callback for the change of an item\n   * - onChange(currentItemObject, currentPageIndex) => {} */\n  onChange: PropTypes.func,\n\n  /** A callback for the beginning of the next transition\n   * - onNextStart(prevItemObject, nextItemObject) => {} */\n  onNextStart: PropTypes.func,\n\n  /** A callback for the beginning of the prev transition\n   * - onPrevStart(prevItemObject, nextItemObject) => {} */\n  onPrevStart: PropTypes.func,\n\n  /** A callback for the end of the next transition\n   * - onNextEnd(nextItemObject, currentPageIndex) => {} */\n  onNextEnd: PropTypes.func,\n\n  /** A callback for the end of the prev transition\n   * - onPrevEnd(nextItemObject, currentPageIndex) => {} */\n  onPrevEnd: PropTypes.func,\n\n  /** A callback for the \"slider-container\" resize\n   * - onResize(currentBreakPoint) => {} */\n  onResize: PropTypes.func\n};\n\nexport default Carousel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,IAAI,GAAG,SAAPA,IAAOA,CAAA,EAAM,EAAnB;AAEP,IAAaC,aAAa,GAAG,SAAhBA,aAAgBA,CAAAC,CAAC;4BAAQC,KAAK,CAACD,CAAD,CAAL,CAASE,IAAT,EAAR;CAAvB;AAEP,IAAaC,SAAS,GAAG,SAAZA,SAAYA,CAAA,EAAmB;MACpCC,MAAM,GAAG,KAAf;MACMC,KAAK,GAAG,GAAd;MACIC,MAAM,MAAAC,MAAA,CAAMH,MAAN,CAAV,CAH0C;;;oCAAfI,UAAe,OAAAP,KAAA,CAAAQ,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;IAAfF,UAAe,CAAAE,IAAA,IAAAC,SAAA,CAAAD,IAAA;;MAMpCE,cAAc,GAAGJ,UAAU,CAACK,MAAX,CAAkB,UAACC,GAAD,EAAMC,OAAN,EAAkB;QACrDA,OAAJ,EAAa;MACXD,GAAG,OAAAP,MAAA,CAAOF,KAAP,EAAAE,MAAA,CAAeH,MAAf,OAAAG,MAAA,CAAyBQ,OAAzB,CAAH,CADW;;WAGND,GAAP;GAJqB,EAKpB,EALoB,CAAvB;EAMAR,MAAM,IAAIM,cAAV;SAEON,MAAP;CAdK;AAiBP,IAAaU,IAAI,GAAG,SAAPA,IAAOA,CAAA;qCAAIC,GAAJ,OAAAhB,KAAA,CAAAiB,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAIF,GAAJ,CAAAE,KAAA,IAAAR,SAAA,CAAAQ,KAAA;;SAAY,UAAAC,CAAC;WAAIH,GAAG,CAACJ,MAAJ,CAAW,UAACQ,CAAD,EAAIC,CAAJ;aAAUA,CAAC,CAACD,CAAD,CAAX;KAAX,EAA2BD,CAA3B,CAAJ;GAAb;CAAb;;;;;;;;ACnBP,IAAAG,MAAA,GAAeC,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoB,UAAAC,IAAA;uBAAGC,IAAH;IAAGA,IAAH,GAAAC,SAAA,cAAU,QAAV,GAAAA,SAAA;SAA0B;IAAED,IAAI,EAAJA;GAA5B;CAApB,CAAf,CAAAE,eAAA,IAKW,UAAAC,KAAK;SAAKA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,MAA/B;CALhB;ACFA,IAAAC,MAAA,GAAe;EACbC,IAAI,EAAE,MADO;EAEbC,IAAI,EAAE,MAFO;EAGbC,KAAK,EAAE,YAHM;EAIbC,MAAM,EAAE,QAJK;EAKbC,GAAG,EAAE;CALP;;;;;;;;ACKA,IAAMC,WAAW,GAAGf,MAAM,CAACgB,GAAP,CAAWd,KAAX,CAAiB,UAAAC,IAAA;MAAGc,KAAH,GAAAd,IAAA,CAAGc,KAAH;SAAgB;IACnDA,KAAK,EAALA,KADmD;IAEnDC,SAAS,EAAEvC,SAAS,CAAC,cAAD;GAFe;CAAjB,CAAH,CAAAwC,iBAAA,IAQI,UAAAC,KAAA;MAAGC,YAAH,GAAAD,KAAA,CAAGC,YAAH;SAAsBA,YAAtB;CARJ,CAAjB;AAWAN,WAAW,CAACO,YAAZ,GAA2B;EACzBL,KAAK,EAAE,EADkB;EAEzBI,YAAY,EAAEZ,MAAM,CAACI;CAFvB;AAKAE,WAAW,CAACQ,SAAZ,GAAwB;EACtBC,QAAQ,EAAEC,SAAS,CAACC,OAAV,CAAkBC,UADN;EAEtBV,KAAK,EAAEQ,SAAS,CAACG,MAFK;EAGtBP,YAAY,EAAEI,SAAS,CAACI,KAAV,CAAgB,CAACpB,MAAM,CAACG,KAAR,EAAeH,MAAM,CAACI,MAAtB,EAA8BJ,MAAM,CAACK,GAArC,CAAhB;CAHhB;;;;;;;;ACnBA,IAAAgB,eAAA,GAAe9B,MAAM,CAACgB,GAAtB,CAAAe,iBAAA;;;;;;;;ACAA,IAAMC,QAAQ,GAAG,SAAXA,QAAWA,CAAA7B,IAAA,EAMX;MALJ8B,KAKI,GAAA9B,IAAA,CALJ8B,KAKI;IAJJC,YAII,GAAA/B,IAAA,CAJJ+B,YAII;IAHJC,SAGI,GAAAhC,IAAA,CAHJgC,SAGI;IAFJC,oBAEI,GAAAjC,IAAA,CAFJiC,oBAEI;IADJC,cACI,GAAAlC,IAAA,CADJkC,cACI;MACAH,YAAY,IAAID,KAApB,EAA2B;WAClB,MAAP;GADF,MAEO;qBACKE,SAAS,GAAGC,oBAAH,GAA0BC,cAA7C;;CAVJ;AAcA,IAAMC,SAAS,GAAG,SAAZA,SAAYA,CAAAlB,KAAA,EAMZ;MALJa,KAKI,GAAAb,KAAA,CALJa,KAKI;IAJJC,YAII,GAAAd,KAAA,CAJJc,YAII;IAHJC,SAGI,GAAAf,KAAA,CAHJe,SAGI;IAFJC,oBAEI,GAAAhB,KAAA,CAFJgB,oBAEI;IADJC,cACI,GAAAjB,KAAA,CADJiB,cACI;MACA,CAACH,YAAD,IAAiBD,KAArB,EAA4B;qBAChBE,SAAS,GAAGC,oBAAH,GAA0BC,cAA7C;GADF,MAEO;WACE,MAAP;;CAVJ;AAcA,IAAME,OAAO,GAAG,SAAVA,OAAUA,CAAAC,KAAA,EAKV;MAJJN,YAII,GAAAM,KAAA,CAJJN,YAII;IAHJC,SAGI,GAAAK,KAAA,CAHJL,SAGI;IAFJC,oBAEI,GAAAI,KAAA,CAFJJ,oBAEI;IADJC,cACI,GAAAG,KAAA,CADJH,cACI;MACA,CAACH,YAAL,EAAmB;WACV,MAAP;GADF,MAEO;qBACKC,SAAS,GAAGC,oBAAH,GAA0BC,cAA7C;;CATJ;AAaA,IAAMI,cAAc,GAAG,SAAjBA,cAAiBA,CAAAC,KAAA,EAAqD;MAAlDP,SAAkD,GAAAO,KAAA,CAAlDP,SAAkD;IAAvCQ,YAAuC,GAAAD,KAAA,CAAvCC,YAAuC;IAAzBC,MAAyB,GAAAF,KAAA,CAAzBE,MAAyB;IAAjBC,UAAiB,GAAAH,KAAA,CAAjBG,UAAiB;MACpEC,QAAQ,GAAGX,SAAS,GAAG,CAAH,GAAOQ,YAAjC;MACMI,eAAe,GAAGZ,SAAS,GAAGU,UAAH,GAAgBD,MAAjD;uBACcE,QAAd,SAAA/D,MAAA,CAA4BgE,eAA5B;CAHF;;AAOA,IAAAC,MAAA,GAAehD,MAAM,CAACgB,GAAP,CAAWd,KAAX,CAAiB,UAAAK,KAAK;SAAK;IACxCU,KAAK,EAAE;MACLgC,UAAU,EAAER,cAAc,CAAClC,KAAD,CADrB;MAEL2C,IAAI,EAAElB,QAAQ,CAACzB,KAAD,CAFT;MAGL4C,KAAK,EAAEb,SAAS,CAAC/B,KAAD,CAHX;MAIL6C,GAAG,EAAEb,OAAO,CAAChC,KAAD;;GALqB;CAAtB,CAAf,CAAA8C,iBAAA,IAUoB,UAAAC,KAAA;MAAGpB,YAAH,GAAAoB,KAAA,CAAGpB,YAAH;SAAuBA,YAAY,GAAG,QAAH,GAAc,KAAjD;CAVpB,EAWI,UAAAqB,KAAA;MAAGrB,YAAH,GAAAqB,KAAA,CAAGrB,YAAH;SAAuBA,YAAY,GAAG,mBAAH,GAAyB,EAA5D;CAXJ,EAYI,UAAAsB,KAAA;MAAGtB,YAAH,GAAAsB,KAAA,CAAGtB,YAAH;IAAiBuB,YAAjB,GAAAD,KAAA,CAAiBC,YAAjB;SACAvB,YAAY,GAAG,EAAH,gBAAAnD,MAAA,CAAqB0E,YAArB,QADZ;CAZJ;;;;;;;;AChDA,IAAAC,cAAA,GAAe1D,MAAM,CAACgB,GAAP,CAAWd,KAAX,CAAiB,UAAAK,KAAK;SAAK;IACxCU,KAAK,EAAE;MACL0C,MAAM,EAAEpD,KAAK,CAACqD,IAAN,CAAWD;;GAFc;CAAtB,CAAf,CAAAE,iBAAA;;;;;;;;ACAA,IAAAC,eAAA,GAAe9D,MAAM,CAACgB,GAAtB,CAAA+C,iBAAA,IAKe,UAAA5D,IAAA;MAAG8B,KAAH,GAAA9B,IAAA,CAAG8B,KAAH;SAAgBA,KAAK,GAAG,KAAH,GAAW,KAAhC;CALf;ICGM+B,oBAAA,0BAAAC,gBAAA;;;;;;;;;;8DACM,YAAM;wBACUC,KAAA,CAAK3D,KADf;QACN4D,OADM,GAAAC,WAAA,CACND,OADM;QACGE,EADH,GAAAD,WAAA,CACGC,EADH;MAEdF,OAAO,CAACE,EAAD,CAAP;;;;;;6BAEO;0BACAC,KAAA,CAAAC,aAAA,CAACxD,WAAD,EAAAyD,QAAA,KAAiB,KAAKjE,KAAtB;QAA6B4D,OAAO,EAAE,KAAKA;SAAlD;;;;EAN+BG,KAAK,CAACG,SAAA;AAUzCT,oBAAoB,CAAC1C,YAArB,GAAoC;EAClC6C,OAAO,EAAE7F;CADX;AAIA0F,oBAAoB,CAACzC,SAArB,GAAiC;EAC/B8C,EAAE,EAAE5C,SAAS,CAACiD,SAAV,CAAoB,CAACjD,SAAS,CAACkD,MAAX,EAAmBlD,SAAS,CAACmD,MAA7B,CAApB,CAD2B;EAE/BT,OAAO,EAAE1C,SAAS,CAACoD;CAFrB;ACbA,IAAMC,KAAK,GAAG,SAARA,KAAQA,CAAA3E,IAAA,EAgBR;MAfJqB,QAeI,GAAArB,IAAA,CAfJqB,QAeI;IAdJuD,UAcI,GAAA5E,IAAA,CAdJ4E,UAcI;IAbJC,wBAaI,GAAA7E,IAAA,CAbJ6E,wBAaI;IAZJC,WAYI,GAAA9E,IAAA,CAZJ8E,WAYI;IAXJC,gBAWI,GAAA/E,IAAA,CAXJ+E,gBAWI;IAVJC,4BAUI,GAAAhF,IAAA,CAVJgF,4BAUI;IATJC,WASI,GAAAjF,IAAA,CATJiF,WASI;IARJC,aAQI,GAAAlF,IAAA,CARJkF,aAQI;IAPJC,WAOI,GAAAnF,IAAA,CAPJmF,WAOI;IANJjE,YAMI,GAAAlB,IAAA,CANJkB,YAMI;IALJkE,WAKI,GAAApF,IAAA,CALJoF,WAKI;IAJJC,QAII,GAAArF,IAAA,CAJJqF,QAII;IAHJC,SAGI,GAAAtF,IAAA,CAHJsF,SAGI;IAFJvD,YAEI,GAAA/B,IAAA,CAFJ+B,YAEI;IADJwD,WACI,GAAAvF,IAAA,CADJuF,WACI;MACEC,KAAK,MAAA5G,MAAA,CAAMgG,UAAN,OAAX;MACMa,YAAY,MAAA7G,MAAA,CAAMwG,WAAW,CAACM,IAAZ,CAAiB,KAAjB,CAAN,OAAlB;MACMC,cAAc,GAAGR,WAAvB;MACMS,cAAc,GAAGT,WAAW,GAAGF,WAArC;MACMY,QAAQ,GAAGF,cAAc,GAAGT,aAAlC;MACMY,QAAQ,GAAGF,cAAc,GAAGV,aAAlC;MAEMa,gBAAgB,GAAG5B,KAAK,CAAC6B,QAAN,CAAeC,GAAf,CAAmB5E,QAAnB,EAA6B,UAAC6E,KAAD,EAAQC,GAAR,EAAgB;QAC9DC,SAAS,GAAGD,GAAG,IAAIR,cAAP,IAAyBQ,GAAG,GAAGP,cAAjD;QACMS,UAAU,GAAG,CAACD,SAAD,IAAcD,GAAG,IAAIN,QAArB,IAAiCM,GAAG,GAAGhB,WAA1D;QACMmB,UAAU,GAAG,CAACF,SAAD,IAAcD,GAAG,GAAGL,QAApB,IAAgCK,GAAG,GAAGhB,WAAzD;QACMoB,SAAS,GAAG,eAAlB;QAEMC,aAAa,GAAG3B,wBAAwB,gBAC1CV,KAAK,CAACsC,YAAN,CAAmBP,KAAnB,EAA0B;MACxBQ,QAAQ,EAAEN,SAAS,GAAG,CAAH,GAAO,CAAC;KAD7B,CAD0C,GAI1CF,KAJJ;wBAME/B,KAAA,CAAAC,aAAA;MACErD,SAAS,EAAEvC,SAAS,CAClB+H,SADkB,KAAA3H,MAAA,CAEf2H,SAFe,OAAA3H,MAAA,CAEFuH,GAFE,MAAAvH,MAAA,CAGf2H,SAHe,OAAA3H,MAAA,CAGFwH,SAAS,GAAG,SAAH,GAAe,QAHtB,GAIlBC,UAAU,OAAAzH,MAAA,CAAO2H,SAAP,UAJQ,EAKlBD,UAAU,OAAA1H,MAAA,CAAO2H,SAAP,UALQ;oBAQpBpC,KAAA,CAAAC,aAAA,CAACP,oBAAD;MACEK,EAAE,EAAEiC,GADN;MAEEjF,YAAY,EAAEA,YAFhB;MAGEJ,KAAK,EAAE;QAAE0E,KAAK,EAALA,KAAF;QAASmB,OAAO,EAAElB;OAH3B;MAIEmB,GAAG,EAAET,GAJP;MAKEnC,OAAO,EAAEuB;OAERiB,aAPH,CATF,CADF;GAXuB,CAAzB;MAiCMK,QAAQ,GAAG/B,WAAW,gBAC1BX,KAAA,CAAAC,aAAA,CAAC0C,SAAD;IACEhG,KAAK,EAAE;MACLiG,OAAO,EAAE,MADJ;MAELC,aAAa,EAAEjF,YAAY,GAAG,QAAH,GAAc;KAH7C;IAKEkF,eAAe,MALjB;IAMEjC,4BAA4B,EAAEA,4BANhC;IAOEkC,UAAU,EAAEnC,gBAPd;IAQEM,QAAQ,EAAEA,QARZ;IASEC,SAAS,EAAEA,SATb;IAUEvE,SAAS,EAAEvC,SAAS,CAAC,UAAD;KAEnBuH,gBAZH,CAD0B,GAgB1BA,gBAhBF;SAkBOc,QAAP;CA3EF;AA8EAlC,KAAK,CAACvD,SAAN,GAAkB;EAChBC,QAAQ,EAAEC,SAAS,CAAC6F,KAAV,CAAgB3F,UADV;EAEhByD,WAAW,EAAE3D,SAAS,CAACmD,MAAV,CAAiBjD,UAFd;EAGhB4F,iBAAiB,EAAE9F,SAAS,CAAC+F,IAHb;EAIhBlC,WAAW,EAAE7D,SAAS,CAACmD,MAAV,CAAiBjD,UAJd;EAKhBN,YAAY,EAAEI,SAAS,CAACkD,MALR;EAMhBY,WAAW,EAAE9D,SAAS,CAAC6F,KANP;EAOhBvC,UAAU,EAAEtD,SAAS,CAACmD,MAPN;EAQhB1C,YAAY,EAAET,SAAS,CAAC+F,IARR;EAShBvC,WAAW,EAAExD,SAAS,CAAC+F,IATP;EAUhBtC,gBAAgB,EAAEzD,SAAS,CAAC+F,IAVZ;EAWhBrC,4BAA4B,EAAE1D,SAAS,CAAC+F,IAXxB;EAYhBhC,QAAQ,EAAE/D,SAAS,CAACoD,IAZJ;EAahBY,SAAS,EAAEhE,SAAS,CAACoD,IAbL;EAchBa,WAAW,EAAEjE,SAAS,CAACoD;CAdzB;AC9EA,IAAM4C,cAAc,GAAG;EACrBvE,IAAI,EAAE,GADe;EAErBC,KAAK,EAAE,GAFc;EAGrBuE,EAAE,EAAE,GAHiB;EAIrBC,IAAI,EAAE;CAJR;AAOA,IAAMC,cAAc,GAAGjJ,SAAS,CAAC,OAAD,CAAhC;AAEA,IAAMkJ,WAAW,GAAG,SAAdA,WAAcA,CAAAC,SAAS,EAAI;MAC3BC,MAAM,GAAG,EAAb;MACID,SAAS,KAAKE,KAAK,CAACN,EAApB,IAA0BI,SAAS,KAAKE,KAAK,CAACL,IAAlD,EAAwD;IACtDI,MAAM,CAACE,SAAP,GAAmB,eAAnB;;SAEKF,MAAP;CALF;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQA,CAAA7H,IAAA,EAAmD;MAAhD2H,SAAgD,GAAA3H,IAAA,CAAhD2H,SAAgD;IAArC3D,OAAqC,GAAAhE,IAAA,CAArCgE,OAAqC;IAA5B+D,KAA4B,GAAA/H,IAAA,CAA5B+H,KAA4B;IAArBjH,KAAqB,GAAAd,IAAA,CAArBc,KAAqB;IAAXkH,IAAW,GAAAC,wBAAA,CAAAjI,IAAA;MACzDkI,MAAM,GAAAC,cAAA,CAAAA,cAAA,KAAQb,cAAR,GAA2BS,KAA3B,CAAZ;MACMK,QAAQ,GAAAD,cAAA,CAAAA,cAAA,KACTT,WAAW,CAACC,SAAD,CADF,GAET7G,KAFS,CAAd;sBAKEqD,KAAA,CAAAC,aAAA,CAACxE,MAAD,EAAAyE,QAAA;IACEqC,QAAQ,EAAE,CADZ;IAEE1C,OAAO,EAAEA,OAFX;IAGEjD,SAAS,EAAEsH,EAAE,CAACZ,cAAD,KAAA7I,MAAA,CAAoB6I,cAApB,OAAA7I,MAAA,CAAsC+I,SAAtC,EAHf;IAIE7G,KAAK,EAAEsH;KACHJ,IALN,GAOGE,MAAM,CAACP,SAAD,CAPT,CADF;CANF;AAmBAE,KAAK,CAAC9E,IAAN,GAAa,MAAb;AACA8E,KAAK,CAAC7E,KAAN,GAAc,OAAd;AACA6E,KAAK,CAACN,EAAN,GAAW,IAAX;AACAM,KAAK,CAACL,IAAN,GAAa,MAAb;AAEAK,KAAK,CAACzG,SAAN,GAAkB;EAChBuG,SAAS,EAAErG,SAAS,CAACI,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,IAAlB,EAAwB,MAAxB,CAAhB,EAAiDF,UAD5C;EAEhBuG,KAAK,EAAEzG,SAAS,CAACG,MAFD;EAGhBX,KAAK,EAAEQ,SAAS,CAACG,MAHD;EAIhBuC,OAAO,EAAE1C,SAAS,CAACoD;CAJrB;AC9CO,IAAM4D,SAAS,GAAG,WAAlB;AACP,IAAaC,SAAS,GAAG,WAAlB;ACCA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqBA,CAACC,KAAD,EAAQC,MAAR,EAAmB;MAC3CC,KAD2C,GACZD,MADY,CAC3CC,KAD2C;IACpCzD,aADoC,GACZwD,MADY,CACpCxD,aADoC;IACrBjF,IADqB,GACZyI,MADY,CACrBzI,IADqB;UAE3CA,IAAR;SACOqI,SAAL;;YACMM,kBAAkB,GAAGH,KAAK,GAAGvD,aAAjC;YACMY,QAAQ,GAAG6C,KAAK,IAAIC,kBAAT,GAA8BA,kBAA9B,GAAmDD,KAApE;eACO7C,QAAP;;SAGGyC,SAAL;;YACMM,kBAAkB,GAAGJ,KAAK,GAAGvD,aAAjC;YACMW,QAAQ,GAAGgD,kBAAkB,IAAIF,KAAtB,GAA8BE,kBAA9B,GAAmDF,KAApE;eACO9C,QAAP;;;aAIO4C,KAAP;;CAhBC;ACAA,IAAMK,cAAc,GAAG,SAAjBA,cAAiBA,CAACH,KAAD,EAAQzD,aAAR;SAA2B;IACvDjF,IAAI,EAAEqI,SADiD;IAEvDK,KAAK,EAALA,KAFuD;IAGvDzD,aAAa,EAAbA;GAH4B;CAAvB;AAMP,IAAa6D,cAAc,GAAG,SAAjBA,cAAiBA,CAACJ,KAAD,EAAQzD,aAAR;SAA2B;IACvDjF,IAAI,EAAEsI,SADiD;IAEvDI,KAAK,EAALA,KAFuD;IAGvDzD,aAAa,EAAbA;GAH4B;CAAvB;;;;;;;;ACHP,IAAM8D,SAAS,GAAG,gCAAlB;AACA,IAAMC,eAAe,GAAG,gCAAxB;AACA,IAAMC,gBAAgB,GAAG,iCAAzB;AAEA,IAAMC,GAAG,GAAGtJ,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoB,UAAAC,IAAA;uBAAGC,IAAH;IAAGA,IAAH,GAAAC,SAAA,cAAU,QAAV,GAAAA,SAAA;SAA0B;IAAED,IAAI,EAAJA;GAA5B;CAApB,CAAH,CAAAmJ,iBAAA,IAMa,UAAAnI,KAAA;MAAGoI,MAAH,GAAApI,KAAA,CAAGoI,MAAH;SAClBA,MAAM,GAAG,qBAAH,GAA2B,aADf;CANb,EAYO,UAAAhH,KAAA;MAAGgH,MAAH,GAAAhH,KAAA,CAAGgH,MAAH;SAAiBA,MAAM,GAAGJ,eAAH,GAAqBD,SAA5C;CAZP,EAkBS,UAAAzG,KAAA;MAAG8G,MAAH,GAAA9G,KAAA,CAAG8G,MAAH;SACZA,MAAM,GAAGJ,eAAH,GAAqBC,gBADf;CAlBT,CAAT;IAuBMI,YAAA,0BAAAxF,gBAAA;;;;;;;;;;8DACM,YAAM;wBACUC,KAAA,CAAK3D,KADf;QACN4D,OADM,GAAAC,WAAA,CACND,OADM;QACGE,EADH,GAAAD,WAAA,CACGC,EADH;MAEdF,OAAO,CAACE,EAAD,CAAP;;;;;;6BAEO;UACCmF,MADD,GACY,KAAKjJ,KADjB,CACCiJ,MADD;0BAGLlF,KAAA,CAAAC,aAAA,CAAC+E,GAAD;QACEzC,QAAQ,EAAE2C,MAAM,GAAG,CAAC,CAAJ,GAAQ,CAD1B;QAEErF,OAAO,EAAE,KAAKA,OAFhB;QAGEqF,MAAM,EAAEA,MAHV;QAIEtI,SAAS,KAAAnC,MAAA,CAAKJ,SAAS,CAAC,KAAD,CAAd,OAAAI,MAAA,CACPyK,MAAM,GAAG7K,SAAS,CAAC,YAAD,CAAZ,GAA6B,EAD5B;QALb;;;;EAPuB2F,KAAK,CAACG,SAAA;AAoBjCgF,YAAY,CAAClI,SAAb,GAAyB;EACvB8C,EAAE,EAAE5C,SAAS,CAACiD,SAAV,CAAoB,CAACjD,SAAS,CAACkD,MAAX,EAAmBlD,SAAS,CAACmD,MAA7B,CAApB,CADmB;EAEvB4E,MAAM,EAAE/H,SAAS,CAAC+F,IAFK;EAGvBrD,OAAO,EAAE1C,SAAS,CAACoD;CAHrB;;;;;;;;AC9CA,IAAM6E,UAAU,GAAG1J,MAAM,CAACgB,GAAV,CAAA2I,iBAAA,GAAhB;IAMMC,UAAA,0BAAA3F,gBAAA;;;;;;;;;6BACK;wBACqC,KAAK1D,KAD1C;QACCsJ,UADD,GAAAzF,WAAA,CACCyF,UADD;QACaC,UADb,GAAA1F,WAAA,CACa0F,UADb;QACyB3F,OADzB,GAAAC,WAAA,CACyBD,OADzB;UAED4F,KAAK,GAAGxL,aAAa,CAACsL,UAAD,CAA3B;0BAEEvF,KAAA,CAAAC,aAAA,CAACmF,UAAD;QAAYxI,SAAS,EAAEvC,SAAS,CAAC,YAAD;SAC7BoL,KAAK,CAAC3D,GAAN,CAAU,UAAC4D,IAAD,EAAOC,CAAP;4BACT3F,KAAA,CAAAC,aAAA,CAACkF,YAAD;UAAK1C,GAAG,EAAEkD,CAAV;UAAa5F,EAAE,EAAE4F,CAAjB;UAAoBT,MAAM,EAAES,CAAC,KAAKH,UAAlC;UAA8C3F,OAAO,EAAEA;UAD9C;OAAV,CADH,CADF;;;;EAJqBG,KAAK,CAACG,SAAA;AAc/BmF,UAAU,CAACtI,YAAX,GAA0B;EACxB6C,OAAO,EAAE7F;CADX;AAIAsL,UAAU,CAACrI,SAAX,GAAuB;EACrBsI,UAAU,EAAEpI,SAAS,CAACmD,MAAV,CAAiBjD,UADR;EAErBmI,UAAU,EAAErI,SAAS,CAACmD,MAAV,CAAiBjD,UAFR;EAGrBwC,OAAO,EAAE1C,SAAS,CAACoD;CAHrB;ICZMqF,QAAA,0BAAAjG,gBAAA;;;;;;;;;;yEACiB;4DACb;MACNkG,UAAU,EAAE,CADN;MAENC,WAAW,EAAE,CAFP;MAGN/H,cAAc,EAAE,CAHV;MAIND,oBAAoB,EAAE,CAJhB;MAKND,SAAS,EAAE,KALL;MAMNkI,aAAa,EAAE,KANT;MAON1H,YAAY,EAAEuB,KAAA,CAAK3D,KAAL,CAAWoC,YAPnB;MAQN2H,WAAW,EAAEpG,KAAA,CAAK3D,KAAL,CAAWgK,kBAAX,IAAiCrG,KAAA,CAAK3D,KAAL,CAAWiK,gBARnD;;MASNT,KAAK,EAAE,EATD;MAUND,UAAU,EAAE,CAVN;MAWNW,oBAAoB,EAAE;;6DAmEf,UAAAC,IAAI;aAAI,UAAAC,GAAG;eAAKzG,KAAA,CAAKwG,IAAL,IAAaC,GAAlB;OAAP;;yEAEQ,YAAM;YACpBC,EAAL,GAAU,IAAIC,cAAJ,CAAmB,UAACC,OAAD,EAAUC,QAAV,EAAuB;mDAC9BD,OAD8B;;;;gBACvCE,KADuC,GAAAC,KAAA,CAAAC,KAAA;gBAE5CF,KAAK,CAACG,MAAN,KAAiBjH,KAAA,CAAKkH,eAA1B,EAA2C;;;;cAIzCC,MAAM,CAACC,qBAAP,CAA6B,YAAM;sBAC5BC,iBAAL,CAAuBP,KAAvB;eADF;;gBAIEA,KAAK,CAACG,MAAN,KAAiBjH,KAAA,CAAKsH,MAA1B,EAAkC;;;;cAIhCH,MAAM,CAACC,qBAAP,CAA6B,YAAM;sBAC5BG,cAAL,CAAoBT,KAApB;eADF;;;8DAbyB;;;;;;;;OADrB,CAAV;YAqBKJ,EAAL,CAAQc,OAAR,CAAgBxH,KAAA,CAAKkH,eAArB;YACKR,EAAL,CAAQc,OAAR,CAAgBxH,KAAA,CAAKsH,MAArB;;0EAGoB;aAAMtH,KAAA,CAAK0G,EAAL,CAAQe,UAAR,EAAN;;kEAER,YAAM;kCACQzH,KAAA,CAAK0H,6BAAL,EADR;QACVC,aADU,GAAAC,qBAAA,CACVD,aADU;YAEbE,kBAAL,GAA0BC,WAAW,CAAC,YAAM;YACtC9H,KAAA,CAAK+H,kBAAT,EAA6B;cACnB5B,aADmB,GACDnG,KAAA,CAAK0E,KADJ,CACnByB,aADmB;cAEvB,CAACA,aAAL,EAAoB;kBACb6B,SAAL;;;OAJ+B,EAOlCL,aAPkC,CAArC;;qEAUe,YAAM;UACjB3H,KAAA,CAAK6H,kBAAT,EAA6B;QAC3BI,aAAa,CAACjI,KAAA,CAAK6H,kBAAN,CAAb;cACKA,kBAAL,GAA0B,IAA1B;;;+DAIO,YAAM;UACTlC,UAAU,GAAG3F,KAAA,CAAKkI,aAAL,EAAnB;UACMrC,KAAK,GAAGxL,aAAa,CAACsL,UAAD,CAA3B;YACKwC,QAAL,CAAc;QAAEtC,KAAK,EAALA;OAAhB;;4EAGsB,UAAAuC,EAAE,EAAI;YACvBd,MAAL,CAAYe,gBAAZ,CAA6B,eAA7B,EAA8CD,EAA9C;;iFAG2B,UAAAA,EAAE,EAAI;YAC5Bd,MAAL,CAAYgB,mBAAZ,CAAgC,eAAhC,EAAiDF,EAAjD;;oFAG8B,YAAM;wBACIpI,KAAA,CAAK3D,KADT;QAC5BkM,WAD4B,GAAArI,WAAA,CAC5BqI,WAD4B;QACZC,WADY,GAAAtE,wBAAA,CAAAhE,WAAA;UAE5BqG,oBAF4B,GAEHvG,KAAA,CAAK0E,KAFF,CAE5B6B,oBAF4B;;UAKhCkC,iBAAJ,CALoC;;UAOhCF,WAAW,IAAIA,WAAW,CAACG,MAAZ,GAAqB,CAAxC,EAA2C;QACzCD,iBAAiB,GAAGF,WAAW,CAC5BI,KADiB;QAAA,CAEjBC,OAFiB;QAAA,CAGjBC,IAHiB,CAGZ,UAAAC,EAAE;iBAAIA,EAAE,CAACrH,KAAH,IAAY8E,oBAAhB;SAHU,CAApB;YAII,CAACkC,iBAAL,EAAwB;;;;UAItBA,iBAAiB,GAAGF,WAAW,CAAC,CAAD,CAA/B;;OAhBgC;;+CAoBxBC,WAAZ,GAA4BC,iBAA5B;;2EAGqB,YAAM;YACtBN,QAAL,CAAc,UAAAzD,KAAK,EAAI;qCAMjB1E,KAAA,CAAK0H,6BAAL,EANiB;UAEnBpK,QAFmB,GAAAyL,sBAAA,CAEnBzL,QAFmB;UAGnBU,YAHmB,GAAA+K,sBAAA,CAGnB/K,YAHmB;UAInBkD,WAJmB,GAAA6H,sBAAA,CAInB7H,WAJmB;UAKnBzC,YALmB,GAAAsK,sBAAA,CAKnBtK,YALmB;YAObyH,WAPa,GAOgBxB,KAPhB,CAObwB,WAPa;UAOAE,WAPA,GAOgB1B,KAPhB,CAOA0B,WAPA;YASfvF,UAAU,GAAGb,KAAA,CAAKgJ,mBAAL,EAAnB;YACMC,UAAU,GAAGhH,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAA9C;YACMS,WAAW,GAAGF,UAAU,GAAG/H,WAAjC;YACIkI,MAAM,GAAGhD,WAAW,GAAG,CAAC,CAA5B;YACMiD,UAAU,GAAGnI,WAAW,IAAI+H,UAAU,GAAG7C,WAAjB,CAA9B;YACIiD,UAAU,GAAG,CAAb,IAAkBF,WAAW,GAAG,CAApC,EAAuC;UACrCC,MAAM,GAAGC,UAAU,GAAGjD,WAAW,GAAG,CAAC,CAArC;;YAEEjI,cAAc,GAAG,CAACH,YAAY,GAAGkI,WAAH,GAAiBrF,UAA9B,IAA4CuI,MAAjE;YACME,cAAc,GAClBD,UAAU,GAAG,CAAb,GAAiBjD,WAAW,GAAGiD,UAA/B,GAA4CjD,WAD9C,CAlBqB;;;;QAuBrBe,MAAM,CAACC,qBAAP,CAA6B,YAAM;cAC7BpH,KAAA,CAAK+H,kBAAT,EAA6B;kBACtBI,QAAL,CAAc;cAAE1J,YAAY,EAAZA;aAAhB;;SAFJ;eAKO;UACLN,cAAc,EAAdA,cADK;UAELiI,WAAW,EAAEkD,cAAc,GAAG,CAAjB,GAAqB,CAArB,GAAyBA;SAFxC;OA5BF;;qEAmCe,UAAAC,UAAU,EAAI;UACzB,CAACvJ,KAAA,CAAK+H,kBAAV,EAA8B;;;mCAQ1B/H,KAAA,CAAK0H,6BAAL,EATyB;QAM3B1J,YAN2B,GAAAwL,sBAAA,CAM3BxL,YAN2B;QAO3BV,QAP2B,GAAAkM,sBAAA,CAO3BlM,QAP2B;QAQ3B4D,WAR2B,GAAAsI,sBAAA,CAQ3BtI,WAR2B;UAUbuI,YAVa,GAUIF,UAAU,CAACG,WAVf,CAUrBjK,MAVqB;UAWvBkK,SAAS,GAAG,EAAlB;UACMC,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAAlD;UACI1K,YAAJ,EAAkB;YACVkI,WAAW,GAAGuD,YAAY,GAAGG,cAAnC,CADgB;;;;QAKhBD,SAAS,CAAC1D,UAAV,GACEC,WAAW,GAAG2D,IAAI,CAACC,GAAL,CAASF,cAAT,EAAyB1I,WAAzB,CADhB;QAEAyI,SAAS,CAACzD,WAAV,GAAwBA,WAAxB;OAPF,MAQO;QACLyD,SAAS,CAAC1D,UAAV,GAAuBwD,YAAvB;;YAEGtB,QAAL,CAAcwB,SAAd;;0EAGoB,YAAM;UAClBpD,oBADkB,GACOvG,KAAA,CAAK0E,KADZ,CAClB6B,oBADkB;mCAOtBvG,KAAA,CAAK0H,6BAAL,EAPsB;QAGxB1J,YAHwB,GAAA+L,sBAAA,CAGxB/L,YAHwB;QAIxBkD,WAJwB,GAAA6I,sBAAA,CAIxB7I,WAJwB;QAKxB8I,cALwB,GAAAD,sBAAA,CAKxBC,cALwB;QAMxB1M,QANwB,GAAAyM,sBAAA,CAMxBzM,QANwB;;;;;UAYpBsM,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAA3B,IAAqC,CAA5D;UAEI7H,UAAU,GAAG,CAAjB;UACI7C,YAAJ,EAAkB;QAChB6C,UAAU,GAAG0F,oBAAb;OADF,MAEO;;;;;QAKL1F,UAAU,GACR0F,oBAAoB,IACnByD,cAAc,GAAG9I,WAAH,GAAiB2I,IAAI,CAACC,GAAL,CAASF,cAAT,EAAyB1I,WAAzB,CADZ,CADtB;;aAIKL,UAAP;;wEAGkB,UAAAoJ,mBAAmB,EAAI;UAC1BC,uBAD0B,GACED,mBAAmB,CAACP,WADtB,CACjCjI,KADiC;;;mCAOrCzB,KAAA,CAAK0H,6BAAL,EAPqC;QAKvCnI,YALuC,GAAA4K,sBAAA,CAKvC5K,YALuC;QAMzB6K,mBANyB,GAAAD,sBAAA,CAMvCnM,YANuC;UAQnCqM,cAAc,GAClBH,uBAAuB,IAAIE,mBAAmB,GAAG,CAAH,GAAO7K,YAAY,GAAG,CAA7C,CADzB;UAIE,CAACS,KAAA,CAAK+H,kBAAN,IACA/H,KAAA,CAAK0E,KAAL,CAAW6B,oBAAX,KAAoC2D,uBAFtC,EAGE;;;;YAIG/B,QAAL,CACE;QAAE5B,oBAAoB,EAAE8D,cAAxB;QAAwC5L,YAAY,EAAE;OADxD,EAEE,YAAM;;qCAMAuB,KAAA,CAAK0H,6BAAL,EANA;UAGF4C,QAHE,GAAAC,sBAAA,CAGFD,QAHE;UAIFpJ,WAJE,GAAAqJ,sBAAA,CAIFrJ,WAJE;UAKF5D,QALE,GAAAiN,sBAAA,CAKFjN,QALE;YAQEsM,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAA3B,IAAqC,CAA5D;cAEKP,QAAL,CACE,UAAAqC,YAAY,EAAI;;;;cAIVpE,WAAW,GAAGoE,YAAY,CAACpE,WAA/B,CAJc;;cAMRqE,cAAc,GAAGZ,IAAI,CAACC,GAAL,CAASF,cAAT,EAAyB1I,WAAzB,CAAvB;cACMwJ,QAAQ,GAAGd,cAAc,GAAGa,cAAlC;cACIrE,WAAW,GAAGsE,QAAlB,EAA4B;YAC1BtE,WAAW,GAAGsE,QAAd;;iBAGK;YAAEtE,WAAW,EAAXA;WAAT;SAbJ,EAeE,YAAM;;;;;;gBAMCuE,oBAAL;cACMlC,iBAAiB,GAAGzI,KAAA,CAAK0H,6BAAL,EAA1B;UACA4C,QAAQ,CAAC7B,iBAAD,CAAR;SAvBJ;OAZJ;;mEA0Ca,UAACmC,QAAD,EAA6C;UAAlCC,QAAkC,GAAA5P,SAAA,CAAAyN,MAAA,QAAAzN,SAAA,QAAA6P,SAAA,GAAA7P,SAAA,MAAvB,EAAuB;UAAnB2D,QAAmB,GAAA3D,SAAA,CAAAyN,MAAA,QAAAzN,SAAA,QAAA6P,SAAA,GAAA7P,SAAA,MAAR,GAAQ;YACrDkN,QAAL,CAAc,UAAAzD,KAAK,EAAI;eACd;UACLzG,SAAS,EAAE,IADN;UAELC,oBAAoB,EAAE0M,QAAQ,GAAGC;SAFnC;OADF;MAMAE,UAAU,CAAC,YAAM;cACV5C,QAAL,CAAc;UACZlK,SAAS,EAAE,KADC;UAEZC,oBAAoB,EAAE;SAFxB;OADQ,EAKPU,QALO,CAAV;;0EAQoB,UAAAoM,KAAK,EAAI;mCACRhL,KAAA,CAAK0H,6BAAL,EADQ;QACrBpK,QADqB,GAAA2N,sBAAA,CACrB3N,QADqB;;UAGvB4N,UAAU,GAAGrB,IAAI,CAACsB,KAAL,CAAWH,KAAX,CAAnB;UACM7I,KAAK,GAAGF,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2B4N,UAA3B,CAAd;aACO;QAAEpF,IAAI,EAAE3D,KAAK,CAAC9F,KAAd;QAAqB2O,KAAK,EAAEE;OAAnC;;uEAGiB,UAACE,YAAD,EAAeC,OAAf,EAA2B;mCAKxCrL,KAAA,CAAK0H,6BAAL,EALwC;QAE1CpK,QAF0C,GAAAgO,sBAAA,CAE1ChO,QAF0C;QAG1C4D,WAH0C,GAAAoK,sBAAA,CAG1CpK,WAH0C;QAI1CC,aAJ0C,GAAAmK,sBAAA,CAI1CnK,aAJ0C;UAMtCyI,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAA3B,IAAqC,CAA5D;UACM6C,oBAAoB,GAAGrK,WAAW,GAAG0I,cAA3C;UACIhF,KAAK,GAAGyG,OAAO,GAAG,CAAH,GAAOzB,cAAc,GAAG1I,WAA3C;UAEIqK,oBAAJ,EAA0B;QACxB3G,KAAK,GAAG,CAAR,CADwB;;UAGpB4G,UAAU,GAAGH,OAAO,GACtBrG,cAAc,CAAC,CAAD,EAAI7D,aAAJ,CADQ,GAEtB4D,cAAc,CAACH,KAAD,EAAQzD,aAAR,CAFlB;UAGMY,QAAQ,GAAG0C,kBAAkB,CAAC2G,YAAD,EAAeI,UAAf,CAAnC;aACOzJ,QAAP;;qEAGe,UAAAsJ,OAAO,EAAI;mCACLrL,KAAA,CAAK0H,6BAAL,EADK;QAClBpK,QADkB,GAAAmO,sBAAA,CAClBnO,QADkB;UAElB8I,WAFkB,GAEFpG,KAAA,CAAK0E,KAFH,CAElB0B,WAFkB;UAGpBsF,aAAa,GAAG1L,KAAA,CAAK2L,gBAAL,CAAsBvF,WAAtB,EAAmCiF,OAAnC,CAAtB,CAH0B;;UAKpBH,UAAU,GAAGrB,IAAI,CAACsB,KAAL,CAAWO,aAAX,CAAnB;UACME,SAAS,GAAG3J,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2B4N,UAA3B,CAAlB;UACMW,KAAK,GAAG;QAAE/F,IAAI,EAAE8F,SAAS,CAACvP,KAAlB;QAAyB2O,KAAK,EAAEE;OAA9C;aACOW,KAAP;;iEAGW,YAAM;YACZ1D,QAAL,CAAc;QACZjK,oBAAoB,EAAE,CADV;QAEZiI,aAAa,EAAE,KAFH;QAGZlI,SAAS,EAAE;OAHb;;gEAOU,UAAA6N,IAAI,EAAI;UACVC,MADU,GAC0BD,IAD1B,CACVC,MADU;QACFC,IADE,GAC0BF,IAD1B,CACFE,IADE;QACIC,MADJ,GAC0BH,IAD1B,CACIG,MADJ;QACYC,IADZ,GAC0BJ,IAD1B,CACYI,IADZ;QACkBC,GADlB,GAC0BL,IAD1B,CACkBK,GADlB;YAGbhE,QAAL,CAAc,UAAAzD,KAAK,EAAI;YACbwB,WADa,GACgCxB,KADhC,CACbwB,WADa;UACAE,WADA,GACgC1B,KADhC,CACA0B,WADA;UACajI,cADb,GACgCuG,KADhC,CACavG,cADb;sCAOjB6B,KAAA,CAAK0H,6BAAL,EAPiB;UAGnBxG,WAHmB,GAAAkL,uBAAA,CAGnBlL,WAHmB;UAInBlD,YAJmB,GAAAoO,uBAAA,CAInBpO,YAJmB;UAKnBV,QALmB,GAAA8O,uBAAA,CAKnB9O,QALmB;UAMnBS,KANmB,GAAAqO,uBAAA,CAMnBrO,KANmB;YASf8C,UAAU,GAAGb,KAAA,CAAKgJ,mBAAL,EAAnB,CATqB;;YAYfY,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAA3B,IAAqC,CAA5D;YACM2D,SAAS,GACZ,CAACrO,YAAD,IAAiBmO,GAAG,KAAK,MAAzB,IAAmC,CAACpO,KAArC,IACC,CAACC,YAAD,IAAiBmO,GAAG,KAAK,OAAzB,IAAoCpO,KADrC,IAECC,YAAY,IAAImO,GAAG,KAAK,IAH3B;YAIMG,SAAS,GACZ,CAACtO,YAAD,IAAiBmO,GAAG,KAAK,OAAzB,IAAoC,CAACpO,KAAtC,IACC,CAACC,YAAD,IAAiBmO,GAAG,KAAK,MAAzB,IAAmCpO,KADpC,IAECC,YAAY,IAAImO,GAAG,KAAK,MAH3B;YAKMI,eAAe,GAAGJ,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,OAAlD;YACMK,aAAa,GAAGL,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,MAA9C;YACMM,cAAc,GAAG,CAACzO,YAAxB;YAEI0O,aAAa,GAAG,CAApB;YACMC,sBAAsB,GAAG9L,UAAU,GAAG,CAA5C;YACM+L,oBAAoB,GAAG1G,WAAW,GAAG,CAA3C;YAEIlI,YAAJ,EAAkB;cACZwO,aAAJ,EAAmB;gBACXK,SAAS,GAAGjD,cAAc,GAAG1D,WAAnC;gBACImG,SAAJ,EAAe;cACbK,aAAa,GACXG,SAAS,GACT3G,WAAW,GAAGE,WADd,GAEAlF,WAAW,GAAGgF,WAFd,GAGA0G,oBAJF;aADF,MAMO,IAAIN,SAAJ,EAAe;cACpBI,aAAa,GAAGxG,WAAW,GAAGE,WAAd,GAA4BwG,oBAA5C;;;SAVN,MAaO;cACDL,eAAJ,EAAqB;gBACbO,UAAS,GAAGlD,cAAc,GAAG/I,UAAnC;gBACIwL,SAAJ,EAAe;cACbK,aAAa,GACXI,UAAS,GACTjM,UAAU,GAAGuF,WADb,GAEAlF,WAAW,GAAGL,UAFd,GAGA8L,sBAJF;aADF,MAMO,IAAIL,SAAJ,EAAe;cACpBI,aAAa,GAAG7L,UAAU,GAAGuF,WAAb,GAA2BuG,sBAA3C;;;;YAKAI,0BAA0B,GAC7BN,cAAc,IAAID,aAAnB,IACCC,cAAc,IAAIF,eAAlB,IAAqCP,IAAI,GAAGU,aAF/C;YAIMM,wBAAwB,GAC3BhP,YAAY,IAAIuO,eAAjB,IACCvO,YAAY,IAAIwO,aAAhB,IAAiCN,IAAI,GAAGQ,aAF3C;YAIIK,0BAA0B,IAAIC,wBAAlC,EAA4D;;;;YAIxD9O,oBAAJ;YACIqO,eAAJ,EAAqB;cACfxO,KAAJ,EAAW;YACTG,oBAAoB,GAAGC,cAAc,GAAG4N,MAAxC;WADF,MAEO;YACL7N,oBAAoB,GAAGC,cAAc,GAAG4N,MAAxC;;SAJJ,MAMO;UACL7N,oBAAoB,GAAGC,cAAc,GAAG8N,MAAxC;;eAEK;UACL/N,oBAAoB,EAApBA,oBADK;UAELD,SAAS,EAAE,IAFN;UAGLkI,aAAa,EAAE;SAHjB;OAhFF;;+DAwFS,UAAA2F,IAAI,EAAI;;;;;UAMTE,IANS,GAMWF,IANX,CAMTE,IANS;QAMHE,IANG,GAMWJ,IANX,CAMHI,IANG;QAMGC,GANH,GAMWL,IANX,CAMGK,GANH;wBAOoBnM,KAAA,CAAK0E,KAPzB;QAOTwB,WAPS,GAAA+G,WAAA,CAOT/G,WAPS;QAOIE,WAPJ,GAAA6G,WAAA,CAOI7G,WAPJ;oCAYbpG,KAAA,CAAK0H,6BAAL,EAZa;QASf1J,YATe,GAAAkP,uBAAA,CASflP,YATe;QAUfD,KAVe,GAAAmP,uBAAA,CAUfnP,KAVe;QAWfoD,aAXe,GAAA+L,uBAAA,CAWf/L,aAXe;UAaXN,UAAU,GAAGb,KAAA,CAAKgJ,mBAAL,EAAnB;UAEIrI,IAAI,GAAGX,KAAA,CAAKmN,UAAhB;UACMC,0BAA0B,GAAGvM,UAAU,GAAG,CAAhD;UACMwM,wBAAwB,GAAGnH,WAAW,GAAG,CAA/C;UACMoH,UAAU,GAAGnB,GAAG,KAAK,MAA3B;UACMoB,WAAW,GAAGpB,GAAG,KAAK,OAA5B;UACMqB,QAAQ,GAAGrB,GAAG,KAAK,IAAzB;UACMsB,UAAU,GAAGtB,GAAG,KAAK,MAA3B;UACMuB,eAAe,GACnB1P,YAAY,KACXwP,QAAQ,IAAIC,UADD,CAAZ,IAEAvB,IAAI,GAAGmB,wBAHT;UAKMM,iBAAiB,GACrB,CAAC3P,YAAD,KACCuP,WAAW,IAAID,UADhB,KAEAtB,IAAI,GAAGoB,0BAHT;UAKIQ,QAAQ,GAAG,KAAf;UACIF,eAAe,IAAIC,iBAAvB,EAA0C;QACxCC,QAAQ,GAAG,IAAX;;UAGEA,QAAJ,EAAc;;;YAIR5P,YAAJ,EAAkB;;cAEV6P,sBAAsB,GAAGhE,IAAI,CAACiE,IAAL,CAC7B,CAAC5B,IAAI,GAAGmB,wBAAR,IAAoCnH,WADP,CAA/B,CAFgB;;cAMV6H,kBAAkB,GAAGlE,IAAI,CAACmE,GAAL,CACzB7M,aADyB,EAEzB0M,sBAFyB,CAA3B;cAKMI,cAAc,GAAG7H,WAAW,GAAG2H,kBAArC;cACMG,iBAAiB,GAAG9H,WAAW,GAAG2H,kBAAxC,CAZgB;;cAeZN,UAAJ,EAAgB;;YAEd9M,IAAI,GAAG,SAAAA,KAAA;qBAAMX,KAAA,CAAKmO,IAAL,CAAUF,cAAV,CAAN;aAAP;;cAEET,QAAJ,EAAc;;YAEZ7M,IAAI,GAAG,SAAAA,KAAA;qBAAMX,KAAA,CAAKmO,IAAL,CAAUD,iBAAV,CAAN;aAAP;;SArBJ,MAuBO;;cAECE,uBAAsB,GAAGvE,IAAI,CAACiE,IAAL,CAC7B,CAAC9B,IAAI,GAAGoB,0BAAR,IAAsCvM,UADT,CAA/B,CAFK;;cAMCwN,mBAAkB,GAAGxE,IAAI,CAACmE,GAAL,CACzB7M,aADyB,EAEzBiN,uBAFyB,CAA3B;cAKME,eAAc,GAAGlI,WAAW,GAAGiI,mBAArC;cACME,kBAAiB,GAAGnI,WAAW,GAAGiI,mBAAxC,CAZK;;cAeDtQ,KAAJ,EAAW;;gBAELuP,UAAJ,EAAgB;;cAEd3M,IAAI,GAAG,SAAAA,KAAA;uBAAMX,KAAA,CAAKmO,IAAL,CAAUG,eAAV,CAAN;eAAP;;gBAEEf,WAAJ,EAAiB;;cAEf5M,IAAI,GAAG,SAAAA,KAAA;uBAAMX,KAAA,CAAKmO,IAAL,CAAUI,kBAAV,CAAN;eAAP;;WARJ,MAUO;;gBAEDjB,UAAJ,EAAgB;;cAEd3M,IAAI,GAAG,SAAAA,KAAA;uBAAMX,KAAA,CAAKmO,IAAL,CAAUI,kBAAV,CAAN;eAAP;;gBAEEhB,WAAJ,EAAiB;;cAEf5M,IAAI,GAAG,SAAAA,KAAA;uBAAMX,KAAA,CAAKmO,IAAL,CAAUG,eAAV,CAAN;eAAP;;;;OAjGS;;;YAwGZnG,QAAL,CAAc;QAAElK,SAAS,EAAE,KAAb;QAAoBkI,aAAa,EAAE;OAAjD;MACAxF,IAAI,CAAC;QAAE6N,QAAQ,EAAE;OAAb,CAAJ;;kEAGY,UAAAC,OAAO,EAAI;oCACCzO,KAAA,CAAK0H,6BAAL,EADD;QACfgH,WADe,GAAAC,uBAAA,CACfD,WADe;UAEftI,WAFe,GAECpG,KAAA,CAAK0E,KAFN,CAEf0B,WAFe;UAGjBwI,WAAW,GAAG5O,KAAA,CAAK6O,cAAL,EAApB;UACMC,WAAW,GAAG9O,KAAA,CAAK+O,mBAAL,CAAyB3I,WAAzB,CAApB;MACAsI,WAAW,CAACI,WAAD,EAAcF,WAAd,CAAX;YACK5G,SAAL,CAAeyG,OAAf;;kEAGY,UAAAA,OAAO,EAAI;oCACCzO,KAAA,CAAK0H,6BAAL,EADD;QACfsH,WADe,GAAAC,uBAAA,CACfD,WADe;UAEf5I,WAFe,GAECpG,KAAA,CAAK0E,KAFN,CAEf0B,WAFe;UAGjBwI,WAAW,GAAG5O,KAAA,CAAK6O,cAAL,CAAoB,IAApB,CAApB;UACMC,WAAW,GAAG9O,KAAA,CAAK+O,mBAAL,CAAyB3I,WAAzB,CAApB;MACA4I,WAAW,CAACF,WAAD,EAAcF,WAAd,CAAX;YACKM,SAAL,CAAeT,OAAf;;gEAGU,YAAkB;UAAjBA,OAAiB,GAAAxT,SAAA,CAAAyN,MAAA,QAAAzN,SAAA,QAAA6P,SAAA,GAAA7P,SAAA,MAAP,EAAO;UACpBuT,QADoB,GACPC,OADO,CACpBD,QADoB;oCAELxO,KAAA,CAAK0H,6BAAL,EAFK;QAEpByH,UAFoB,GAAAC,uBAAA,CAEpBD,UAFoB;yBAGYnP,KAAA,CAAK0E,KAHjB;QAGpB0B,WAHoB,GAAAiJ,YAAA,CAGpBjJ,WAHoB;QAGPjI,cAHO,GAAAkR,YAAA,CAGPlR,cAHO;UAItB4D,QAAQ,GAAG/B,KAAA,CAAK2L,gBAAL,CAAsBvF,WAAtB,EAAmC,KAAnC,CAAjB;UACIA,WAAW,KAAKrE,QAApB,EAA8B;cACvBoM,IAAL,CAAUpM,QAAV;OADF,MAEO,IAAIoN,UAAU,IAAI,CAACX,QAAnB,EAA6B;cAC7Bc,YAAL,CAAkBnR,cAAlB,EAAkC,EAAlC,EAAsC,GAAtC;;;gEAIQ,YAAkB;UAAjBsQ,OAAiB,GAAAxT,SAAA,CAAAyN,MAAA,QAAAzN,SAAA,QAAA6P,SAAA,GAAA7P,SAAA,MAAP,EAAO;UACpBuT,QADoB,GACPC,OADO,CACpBD,QADoB;UAEpBpI,WAFoB,GAEJpG,KAAA,CAAK0E,KAFD,CAEpB0B,WAFoB;oCAGLpG,KAAA,CAAK0H,6BAAL,EAHK;QAGpByH,UAHoB,GAAAI,uBAAA,CAGpBJ,UAHoB;UAItBrN,QAAQ,GAAG9B,KAAA,CAAK2L,gBAAL,CAAsBvF,WAAtB,EAAmC,IAAnC,CAAjB;UACIA,WAAW,KAAKtE,QAApB,EAA8B;cACvBqM,IAAL,CAAUrM,QAAV;OADF,MAEO,IAAIqN,UAAU,IAAI,CAACX,QAAnB,EAA6B;cAC7Bc,YAAL,CAAkB,CAAlB,EAAqB,CAAC,EAAtB,EAA0B,GAA1B;;;gEAIQ,YAAM;oCACgBtP,KAAA,CAAK0H,6BAAL,EADhB;QACR8H,SADQ,GAAAC,uBAAA,CACRD,SADQ;QACGE,QADH,GAAAD,uBAAA,CACGC,QADH;yBAEoB1P,KAAA,CAAK0E,KAFzB;QAER0B,WAFQ,GAAAuJ,YAAA,CAERvJ,WAFQ;QAEKR,UAFL,GAAA+J,YAAA,CAEK/J,UAFL;UAGVgJ,WAAW,GAAG5O,KAAA,CAAK+O,mBAAL,CAAyB3I,WAAzB,CAApB;YACKwJ,0BAAL,CAAgC5P,KAAA,CAAKwP,SAArC;YACKrH,QAAL,CAAc;QAAEhC,aAAa,EAAE;OAA/B;MACAuJ,QAAQ,IAAIA,QAAQ,CAACd,WAAD,EAAchJ,UAAd,CAApB;MACA4J,SAAS,CAACZ,WAAD,EAAchJ,UAAd,CAAT;;gEAGU,YAAM;oCACgB5F,KAAA,CAAK0H,6BAAL,EADhB;QACRmI,SADQ,GAAAC,uBAAA,CACRD,SADQ;QACGH,QADH,GAAAI,uBAAA,CACGJ,QADH;yBAEoB1P,KAAA,CAAK0E,KAFzB;QAER0B,WAFQ,GAAA2J,YAAA,CAER3J,WAFQ;QAEKR,UAFL,GAAAmK,YAAA,CAEKnK,UAFL;UAGVgJ,WAAW,GAAG5O,KAAA,CAAK+O,mBAAL,CAAyB3I,WAAzB,CAApB;YACKwJ,0BAAL,CAAgC5P,KAAA,CAAK6P,SAArC;YACK1H,QAAL,CAAc;QAAEhC,aAAa,EAAE;OAA/B;MACAuJ,QAAQ,IAAIA,QAAQ,CAACd,WAAD,EAAchJ,UAAd,CAApB;MACAiK,SAAS,CAACjB,WAAD,EAAchJ,UAAd,CAAT;;8EAGwB,UACxBhC,SADwB,EAExBoM,UAFwB,EAGxBhS,YAHwB,EAIxBiG,IAJwB;aAKrB,UAAAS,KAAK,EAAI;YACJvG,cADI,GACyCuG,KADzC,CACJvG,cADI;UACY+H,WADZ,GACyCxB,KADzC,CACYwB,WADZ;UACyBE,WADzB,GACyC1B,KADzC,CACyB0B,WADzB;YAENvF,UAAU,GAAGb,KAAA,CAAKgJ,mBAAL,EAAnB;YAEIiH,iBAAiB,GAAG,CAAxB;YACMC,SAAS,GAAGlS,YAAY,GAAGkI,WAAH,GAAiBrF,UAA/C;YACI+C,SAAS,KAAKrH,MAAM,CAACE,IAAzB,EAA+B;UAC7BwT,iBAAiB,GACf9R,cAAc,GAAG+R,SAAS,IAAIF,UAAU,GAAG5J,WAAjB,CAD5B;SADF,MAGO;UACL6J,iBAAiB,GACf9R,cAAc,GAAG+R,SAAS,IAAI9J,WAAW,GAAG4J,UAAlB,CAD5B;;;UAKA7R,cAAc,EAAE8R,iBADlB;UAEE7J,WAAW,EAAE4J,UAFf;UAGE9R,oBAAoB,EAAE,CAHxB;UAIED,SAAS,EAAE;WACRgG,IALL;OAnBwB;;2DA4BnB,UAAA+L,UAAU,EAAI;oCAKfhQ,KAAA,CAAK0H,6BAAL,EALe;QAEjBpK,QAFiB,GAAA6S,uBAAA,CAEjB7S,QAFiB;QAGjBU,YAHiB,GAAAmS,uBAAA,CAGjBnS,YAHiB;QAIjBkD,WAJiB,GAAAiP,uBAAA,CAIjBjP,WAJiB;UAMXkF,WANW,GAMKpG,KAAA,CAAK0E,KANV,CAMX0B,WANW;UAObwD,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAAlD;UACI0H,cAAc,GAAGvG,IAAI,CAACmE,GAAL,CAAS,CAAT,EAAYgC,UAAZ,CAArB,CARmB;;UASbK,MAAM,GAAGjK,WAAW,GAAGgK,cAA7B;UACME,iBAAiB,GAAGtQ,KAAA,CAAK2L,gBAAL,CAAsBvF,WAAtB,EAAmCiK,MAAnC,CAA1B;UACME,QAAQ,GAAGD,iBAAiB,KAAKlK,WAAvC;UACMoK,aAAa,GAAGJ,cAAc,GAAGlP,WAAjB,IAAgC0I,cAAtD;UACI2G,QAAJ,EAAc;;;UAGVC,aAAJ,EAAmB;;QAEjBJ,cAAc,GAAGvG,IAAI,CAACmE,GAAL,CAAS,CAAT,EAAYpE,cAAc,GAAG1I,WAA7B,CAAjB;;UAEE0C,SAAS,GAAGrH,MAAM,CAACE,IAAvB;UACIgU,aAAa,GAAGzQ,KAAA,CAAKwP,SAAzB;UACIa,MAAJ,EAAY;QACVzM,SAAS,GAAGrH,MAAM,CAACC,IAAnB;QACAiU,aAAa,GAAGzQ,KAAA,CAAK6P,SAArB;;UAEIa,YAAY,GAAG1Q,KAAA,CAAK2Q,uBAAL,CACnB/M,SADmB,EAEnBwM,cAFmB,EAGnBpS,YAHmB,EAInB;QACEmI,aAAa,EAAE;OALE,CAArB;YAQKgC,QAAL,CAAcuI,YAAd,EAA4B,YAAM;;QAEhCpV,IAAI,CACF0E,KAAA,CAAK4Q,gBAAL,EADE,EAEF5Q,KAAA,CAAK6Q,qBAAL,CAA2BJ,aAA3B,CAFE,CAAJ;OAFF;;oEASc,YAAM;oCACczQ,KAAA,CAAK0H,6BAAL,EADd;QACZpK,QADY,GAAAwT,uBAAA,CACZxT,QADY;QACF4D,WADE,GAAA4P,uBAAA,CACF5P,WADE;UAEd0I,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAAlD;UACMqI,eAAe,GAAGlH,IAAI,CAACmE,GAAL,CAAS9M,WAAT,EAAsB,CAAtB,CAAxB;UACMyE,UAAU,GAAGkE,IAAI,CAACiE,IAAL,CAAUlE,cAAc,GAAGmH,eAA3B,CAAnB;aACOpL,UAAU,IAAI,CAArB;;uEAGiB,YAAM;YAClBwC,QAAL,CAAc,UAAAzD,KAAK,EAAI;sCACa1E,KAAA,CAAK0H,6BAAL,EADb;UACbxG,WADa,GAAA8P,uBAAA,CACb9P,WADa;UACA5D,QADA,GAAA0T,uBAAA,CACA1T,QADA;YAEb8I,WAFa,GAEe1B,KAFf,CAEb0B,WAFa;UAEAR,UAFA,GAEelB,KAFf,CAEAkB,UAFA;YAGfD,UAAU,GAAG3F,KAAA,CAAKkI,aAAL,EAAnB;YACM0B,cAAc,GAAG3H,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAAlD;YACMuI,kBAAkB,GAAGpH,IAAI,CAACC,GAAL,CAASF,cAAT,EAAyB1I,WAAzB,CAA3B,CALqB;;YAOf6P,eAAe,GAAGlH,IAAI,CAACmE,GAAL,CAASiD,kBAAT,EAA6B,CAA7B,CAAxB;YACMC,aAAa,GAAGrH,IAAI,CAACiE,IAAL,CAAU1H,WAAW,GAAG2K,eAAxB,CAAtB;YACMI,sBAAsB,GAAGtH,IAAI,CAACC,GAAL,CAASnE,UAAU,GAAG,CAAtB,EAAyBuL,aAAzB,CAA/B;YACItL,UAAU,KAAKuL,sBAAnB,EAA2C;iBAClC;YAAEvL,UAAU,EAAEuL;WAArB;;OAXJ;;uEAgBiB,UAAAC,WAAW,EAAI;oCACRpR,KAAA,CAAK0H,6BAAL,EADQ;QACxBxG,WADwB,GAAAmQ,uBAAA,CACxBnQ,WADwB;UAE1BoQ,SAAS,GAAGF,WAAW,GAAGlQ,WAAhC;YACKiH,QAAL,CAAc;QAAEvC,UAAU,EAAEwL;OAA5B;YACKjD,IAAL,CAAUmD,SAAV;;;;;;wCArtBkB;WACbvJ,kBAAL,GAA0B,IAA1B;WACKwJ,kBAAL;WACKX,gBAAL;WACKY,QAAL;;;;uCAGiBC,SAAA,EAAWC,SAAA,EAAW;yBAOnC,KAAKrV,KAP8B;QAErCsV,cAFqC,GAAAC,YAAA,CAErCD,cAFqC;QAGrCrU,QAHqC,GAAAsU,YAAA,CAGrCtU,QAHqC;QAIrC4D,WAJqC,GAAA0Q,YAAA,CAIrC1Q,WAJqC;QAKrCC,aALqC,GAAAyQ,YAAA,CAKrCzQ,aALqC;QAMrCoH,WANqC,GAAAqJ,YAAA,CAMrCrJ,WANqC;yBAQO,KAAK7D,KARZ;QAQ/B0B,WAR+B,GAAAyL,YAAA,CAQ/BzL,WAR+B;QAQlBG,oBARkB,GAAAsL,YAAA,CAQlBtL,oBARkB;UASjCxE,QAAQ,GAAG,KAAK4J,gBAAL,CAAsBvF,WAAtB,EAAmC,KAAnC,CAAjB;UACM0L,qBAAqB,GAAG7P,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,EAA2BoL,MAAzD;UACMqJ,kBAAkB,GAAG9P,QAAQ,CAACiH,OAAT,CAAiBuI,SAAS,CAACnU,QAA3B,EAAqCoL,MAAhE,CAXuC;;UAcrCqJ,kBAAkB,KAAKD,qBAAvB,IACAL,SAAS,CAACvQ,WAAV,KAA0BA,WAD1B,IAEAuQ,SAAS,CAACtQ,aAAV,KAA4BA,aAF5B,IAGAsQ,SAAS,CAAClJ,WAAV,KAA0BA,WAH1B,IAIAhC,oBAAoB,KAAKmL,SAAS,CAACnL,oBALrC,EAME;;aAEKc,iBAAL,CAAuB;UAAEqC,WAAW,EAAE;YAAEjI,KAAK,EAAE8E;;SAA/C;aACKiL,QAAL;aACKZ,gBAAL;OAvBqC;;UA2BnCxK,WAAW,KAAKrE,QAApB,EAA8B;aACvBiQ,cAAL;OADF,MAEO,IAAIL,cAAc,IAAI,CAAC,KAAK9J,kBAA5B,EAAgD;aAChDoK,WAAL;OADK,MAEA,IAAI,CAACN,cAAD,IAAmB,KAAK9J,kBAA5B,EAAgD;aAChDmK,cAAL;;UAGED,kBAAkB,KAAKD,qBAA3B,EAAkD;sCAG5C,KAAKpK,6BAAL,EAH4C;UAEjCwK,qBAFiC,GAAAC,uBAAA,CAE9CjR,WAF8C;;;;YAO1CkR,SAAS,GAAGN,qBAAqB,GAAG,CAA1C;YACMO,YAAY,GAAGjM,WAAW,GAAG8L,qBAAd,GAAsCE,SAA3D;YACIC,YAAJ,EAAkB;;eAEXlE,IAAL,CAAUtE,IAAI,CAACmE,GAAL,CAAS,CAAT,EAAY8D,qBAAqB,GAAGI,qBAApC,CAAV;;;;;;2CAKiB;WAChBnK,kBAAL,GAA0B,KAA1B;WACKiK,cAAL;WACKM,mBAAL;;;;6BA2pBO;yBAUH,KAAK5N,KAVF;QAELkB,UAFK,GAAA2M,YAAA,CAEL3M,UAFK;QAGL3H,SAHK,GAAAsU,YAAA,CAGLtU,SAHK;QAILE,cAJK,GAAAoU,YAAA,CAILpU,cAJK;QAKLD,oBALK,GAAAqU,YAAA,CAKLrU,oBALK;QAML+H,UANK,GAAAsM,YAAA,CAMLtM,UANK;QAOLJ,KAPK,GAAA0M,YAAA,CAOL1M,KAPK;QAQLO,WARK,GAAAmM,YAAA,CAQLnM,WARK;QASL3H,YATK,GAAA8T,YAAA,CASL9T,YATK;oCAkCH,KAAKiJ,6BAAL,EAlCG;QAYL1K,SAZK,GAAAwV,uBAAA,CAYLxV,SAZK;QAaLD,KAbK,GAAAyV,uBAAA,CAaLzV,KAbK;QAcLmE,WAdK,GAAAsR,uBAAA,CAcLtR,WAdK;QAeLC,aAfK,GAAAqR,uBAAA,CAeLrR,aAfK;QAgBLnD,YAhBK,GAAAwU,uBAAA,CAgBLxU,YAhBK;QAiBLD,KAjBK,GAAAyU,uBAAA,CAiBLzU,KAjBK;QAkBLW,MAlBK,GAAA8T,uBAAA,CAkBL9T,MAlBK;QAmBLC,UAnBK,GAAA6T,uBAAA,CAmBL7T,UAnBK;QAoBLrB,QApBK,GAAAkV,uBAAA,CAoBLlV,QApBK;QAqBLmV,aArBK,GAAAD,uBAAA,CAqBLC,aArBK;QAsBL3R,wBAtBK,GAAA0R,uBAAA,CAsBL1R,wBAtBK;QAuBL3D,YAvBK,GAAAqV,uBAAA,CAuBLrV,YAvBK;QAwBLkE,WAxBK,GAAAmR,uBAAA,CAwBLnR,WAxBK;QAyBL9B,YAzBK,GAAAiT,uBAAA,CAyBLjT,YAzBK;QA0BLwB,WA1BK,GAAAyR,uBAAA,CA0BLzR,WA1BK;QA2BLC,gBA3BK,GAAAwR,uBAAA,CA2BLxR,gBA3BK;QA4BL0R,UA5BK,GAAAF,uBAAA,CA4BLE,UA5BK;QA6BLC,UA7BK,GAAAH,uBAAA,CA6BLG,UA7BK;QA8BLC,kBA9BK,GAAAJ,uBAAA,CA8BLI,kBA9BK;QA+BL3R,4BA/BK,GAAAuR,uBAAA,CA+BLvR,4BA/BK;QAgCL4R,WAhCK,GAAAL,uBAAA,CAgCLK,WAhCK;QAiCLC,gBAjCK,GAAAN,uBAAA,CAiCLM,gBAjCK;UAoCDjS,UAAU,GAAG,KAAKmI,mBAAL,EAAnB;UAEMrD,UAAU,GAAG,KAAKuC,aAAL,EAAnB;;;UAGM6K,YAAY,GAChB3M,WAAW,KAAK,KAAKuF,gBAAL,CAAsBvF,WAAtB,EAAmC,IAAnC,CADlB;UAEM4M,YAAY,GAChB5M,WAAW,KAAK,KAAKuF,gBAAL,CAAsBvF,WAAtB,EAAmC,KAAnC,CADlB;UAEM6M,iBAAiB,GAAG,CAACF,YAAD,IAAiBH,kBAA3C;UACMM,iBAAiB,GAAG,CAACF,YAAD,IAAiBJ,kBAA3C;0BAGExS,KAAA,CAAAC,aAAA,CAACT,eAAD;QACE7B,KAAK,EAAEA,KADT;QAEEf,SAAS,KAAAnC,MAAA,CAAKJ,SAAS,CAAC,kBAAD,CAAd,OAAAI,MAAA,CAAsCmC,SAAtC,CAFX;QAGED,KAAK,EAAEA;sBAEPqD,KAAA,CAAAC,aAAA,CAACb,cAAD;QACExC,SAAS,EAAEvC,SAAS,CAAC,UAAD,CADtB;QAEEiF,IAAI,EAAE;UAAED,MAAM,EAAEwG;;sBAEhB7F,KAAA,CAAAC,aAAA,CAAC8S,IAAD;QAAMC,IAAI,EAAET;SACTE,WAAW,GACVA,WAAW,CAAC;QACV3W,IAAI,EAAEK,MAAM,CAACC,IADH;QAEVyD,OAAO,EAAE,KAAK+O,WAFJ;QAGVqE,MAAM,EAAE,CAACN;OAHA,CADD,gBAOV3S,KAAA,CAAAC,aAAA,CAACyD,KAAD;QACE7D,OAAO,EAAE,KAAK+O,WADhB;QAEEpL,SAAS,EAAE5F,YAAY,GAAG8F,KAAK,CAACN,EAAT,GAAcM,KAAK,CAAC9E,IAF7C;QAGE1C,QAAQ,EAAE2W;QAXhB,CAJF,eAmBE7S,KAAA,CAAAC,aAAA,CAACzC,eAAD;QACEZ,SAAS,EAAEvC,SAAS,CAAC,kBAAD,CADtB;QAEEgM,GAAG,EAAE,KAAK6M,MAAL,CAAY,iBAAZ;sBAELlT,KAAA,CAAAC,aAAA,CAACvB,MAAD;QACEd,YAAY,EAAEA,YADhB;QAEED,KAAK,EAAEA,KAFT;QAGEW,MAAM,EAAEA,MAHV;QAIEP,cAAc,EAAEA,cAJlB;QAKED,oBAAoB,EAAEA,oBALxB;QAMED,SAAS,EAAEA,SANb;QAOEQ,YAAY,EAAEA,YAPhB;QAQEE,UAAU,EAAEA,UARd;QASE3B,SAAS,EAAEvC,SAAS,CAAC,QAAD,CATtB;QAUEgM,GAAG,EAAE,KAAK6M,MAAL,CAAY,QAAZ,CAVP;QAWE/T,YAAY,EAAEA;sBAEda,KAAA,CAAAC,aAAA,CAACO,KAAD;QACE5C,YAAY,EAAEA,YADhB;QAEEV,QAAQ,EAAE2E,QAAQ,CAACiH,OAAT,CAAiB5L,QAAjB,CAFZ;QAGEuD,UAAU,EAAEA,UAHd;QAIEO,WAAW,EAAEgF,WAJf;QAKEtF,wBAAwB,EAAEA,wBAL5B;QAMEI,WAAW,EAAEA,WANf;QAOEC,aAAa,EAAEA,aAPjB;QAQEhE,YAAY,EAAEA,YARhB;QASEkE,WAAW,EAAEA,WATf;QAUEN,WAAW,EAAEA,WAVf;QAWEC,gBAAgB,EAAEA,gBAXpB;QAYEC,4BAA4B,EAAEA,4BAZhC;QAaEK,QAAQ,EAAE,KAAKA,QAbjB;QAcEC,SAAS,EAAE,KAAKA,SAdlB;QAeEC,WAAW,EAAEiR,aAAa,GAAG,KAAKtE,IAAR,GAAerD;QA5B7C,CAJF,CAnBF,eAuDE1K,KAAA,CAAAC,aAAA,CAAC8S,IAAD;QAAMC,IAAI,EAAET;SACTE,WAAW,GACVA,WAAW,CAAC;QACV3W,IAAI,EAAEK,MAAM,CAACE,IADH;QAEVwD,OAAO,EAAE,KAAKyO,WAFJ;QAGV2E,MAAM,EAAE,CAACL;OAHA,CADD,gBAOV5S,KAAA,CAAAC,aAAA,CAACyD,KAAD;QACE7D,OAAO,EAAE,KAAKyO,WADhB;QAEE9K,SAAS,EAAE5F,YAAY,GAAG8F,KAAK,CAACL,IAAT,GAAgBK,KAAK,CAAC7E,KAF/C;QAGE3C,QAAQ,EAAE4W;QAXhB,CAvDF,CALF,eA4EE9S,KAAA,CAAAC,aAAA,CAAC8S,IAAD;QAAMC,IAAI,EAAEV;SACTI,gBAAgB,GACfA,gBAAgB,CAAC;QACfjN,KAAK,EAAEA,KADQ;QAEfD,UAAU,EAAVA,UAFe;QAGf3F,OAAO,EAAE,KAAKsT;OAHA,CADD,gBAOfnT,KAAA,CAAAC,aAAA,CAACqF,UAAD;QACEC,UAAU,EAAEA,UADd;QAEEC,UAAU,EAAEA,UAFd;QAGE3F,OAAO,EAAE,KAAKsT;QAXpB,CA5EF,CADF;;;;EAxxBmBnT,KAAK,CAACG,SAAA;AAy3B7ByF,QAAQ,CAAC5I,YAAT,GAAwB;EACtBJ,SAAS,EAAE,EADW;EAEtBD,KAAK,EAAE,EAFe;EAGtBiB,YAAY,EAAE,KAHQ;EAItBD,KAAK,EAAE,KAJe;EAKtBuI,gBAAgB,EAAE,CALI;EAMtBD,kBAAkB,EAAE,CANE;EAOtBsM,UAAU,EAAE,IAPU;EAQtB3I,cAAc,EAAE,KARM;EAStB4I,kBAAkB,EAAE,IATE;EAUtBF,UAAU,EAAE,IAVU;EAWtBhU,MAAM,EAAE,MAXc;EAYtBC,UAAU,EAAE,MAZU;EAatBF,YAAY,EAAE,GAbQ;EActB0Q,UAAU,EAAE,IAdU;EAetBpO,WAAW,EAAE,IAfS;EAgBtBC,gBAAgB,EAAE,IAhBI;EAiBtBC,4BAA4B,EAAE,KAjBR;EAkBtBwR,aAAa,EAAE,KAlBO;EAmBtB3R,wBAAwB,EAAE,IAnBJ;EAoBtBI,WAAW,EAAE,CApBS;EAqBtBC,aAAa,EAAE,CArBO;EAsBtBhE,YAAY,EAAEZ,MAAM,CAACI,MAtBC;EAuBtB0E,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAvBS;EAwBtB9B,YAAY,EAAE,CAxBQ;EAyBtBoS,cAAc,EAAE,KAzBM;EA0BtBhK,aAAa,EAAE,IA1BO;;EA6BtB+H,QAAQ,EAAEtV,IA7BY;EA8BtBoV,SAAS,EAAEpV,IA9BW;EA+BtByV,SAAS,EAAEzV,IA/BW;EAgCtBsU,WAAW,EAAEtU,IAhCS;EAiCtB4U,WAAW,EAAE5U,IAjCS;EAkCtBkQ,QAAQ,EAAElQ;CAlCZ;AAqCA4L,QAAQ,CAAC3I,SAAT,GAAqB;;EAEnBC,QAAQ,EAAEC,SAAS,CAACiW,IAAV,CAAe/V,UAFN;;EAKnBT,SAAS,EAAEO,SAAS,CAACkD,MALF;;EAQnB1D,KAAK,EAAEQ,SAAS,CAACG,MARE;;EAWnBM,YAAY,EAAET,SAAS,CAAC+F,IAXL;;EAcnBvF,KAAK,EAAER,SAAS,CAAC+F,IAdE;;EAiBnBoP,UAAU,EAAEnV,SAAS,CAAC+F,IAjBH;;EAoBnB7E,YAAY,EAAElB,SAAS,CAACmD,MApBL;;EAuBnBhC,MAAM,EAAEnB,SAAS,CAACkD,MAvBC;;EA0BnB9B,UAAU,EAAEpB,SAAS,CAACkD,MA1BH;;EA6BnB0O,UAAU,EAAE5R,SAAS,CAAC+F,IA7BH;;EAgCnBpC,WAAW,EAAE3D,SAAS,CAACmD,MAhCJ;;EAmCnBS,aAAa,EAAE5D,SAAS,CAACmD,MAnCN;;EAsCnB6H,WAAW,EAAEhL,SAAS,CAACkW,OAAV,CACXlW,SAAS,CAACmW,KAAV,CAAgB;IACdjS,KAAK,EAAElE,SAAS,CAACmD,MAAV,CAAiBjD,UADV;IAEdyD,WAAW,EAAE3D,SAAS,CAACmD,MAFT;IAGdS,aAAa,EAAE5D,SAAS,CAACmD;GAH3B,CADW,CAtCM;;EA+CnB2F,kBAAkB,EAAE9I,SAAS,CAACmD,MA/CX;;EAkDnB4F,gBAAgB,EAAE/I,SAAS,CAACmD,MAlDT;;EAqDnBiS,UAAU,EAAEpV,SAAS,CAAC+F,IArDH;;EAwDnB0G,cAAc,EAAEzM,SAAS,CAAC+F,IAxDP;;EA2DnBsP,kBAAkB,EAAErV,SAAS,CAAC+F,IA3DX;;EA8DnBmP,aAAa,EAAElV,SAAS,CAAC+F,IA9DN;;EAiEnBxC,wBAAwB,EAAEvD,SAAS,CAAC+F,IAjEjB;;;;EAsEnBuP,WAAW,EAAEtV,SAAS,CAACoD,IAtEJ;;;;EA2EnBmS,gBAAgB,EAAEvV,SAAS,CAACoD,IA3ET;;EA8EnBxD,YAAY,EAAEI,SAAS,CAACI,KAAV,CAAgB,CAACpB,MAAM,CAACG,KAAR,EAAeH,MAAM,CAACI,MAAtB,EAA8BJ,MAAM,CAACK,GAArC,CAAhB,CA9EK;;EAiFnByE,WAAW,EAAE9D,SAAS,CAAC6F,KAjFJ;;EAoFnB7D,YAAY,EAAEhC,SAAS,CAACmD,MApFL;;;;EAwFnBK,WAAW,EAAExD,SAAS,CAAC+F,IAxFJ;;EA2FnBtC,gBAAgB,EAAEzD,SAAS,CAAC+F,IA3FT;;;;;EAiGnBrC,4BAA4B,EAAE1D,SAAS,CAAC+F,IAjGrB;;;;EAqGnBqO,cAAc,EAAEpU,SAAS,CAAC+F,IArGP;;EAwGnBqE,aAAa,EAAEpK,SAAS,CAACmD,MAxGN;;;;;EA6GnBgP,QAAQ,EAAEnS,SAAS,CAACoD,IA7GD;;;EAiHnB+N,WAAW,EAAEnR,SAAS,CAACoD,IAjHJ;;;EAqHnBqO,WAAW,EAAEzR,SAAS,CAACoD,IArHJ;;;EAyHnB6O,SAAS,EAAEjS,SAAS,CAACoD,IAzHF;;;EA6HnBkP,SAAS,EAAEtS,SAAS,CAACoD,IA7HF;;;EAiInB2J,QAAQ,EAAE/M,SAAS,CAACoD;CAjItB","ignoreList":[]},"metadata":{},"sourceType":"module"}